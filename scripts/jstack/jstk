#!/usr/bin/perl

use strict;

my $PID=$ARGV[0];
my $REPORT=$ARGV[1];
my $nreports = 3;

my %THREAD_STACKS;
my $DLOCK_REPORT;
my @threads;
my @reports;
my @cfgfiles;
my $cmdLine;
my $cwdDir;
my $environ;
my $jstk_path;
my $sockets;
my $stime;

checkEnv();
findData();
parseData();
printReport();

sub checkEnv
{
  if ($PID eq "") {
    error("Process id parameter not present");
  }

  if (! -d "/proc/$PID") {
    error("Process $PID is not running");
  }

  if (! exists $ENV{'JAVA_HOME'}) {
    error("JAVA_HOME directory is not set");
  }

  $jstk_path= "$ENV{'JAVA_HOME'}/bin/jstack"; 
  if (! -f $jstk_path) {
    error("jstack not found in $jstk_path (relative to JAVA_HOME)");
  }

  if ($REPORT eq "") {
    error("output_file parameter is not present");
  }
}

sub findData
{
  my ($r,$i,@tokens,$tk,$path);

  open(OF,">$REPORT.raw");

  $sockets = `lsof -p $PID`;
  print OF $sockets;

  @tokens = split('\n',`ps -lf -p $PID | awk '{ print \$12 }'`);
  shift(@tokens);
  $stime = $tokens[0];

  $cmdLine = `cat /proc/$PID/cmdline | tr "\\0" " "`;
	
  @tokens = split(" ", `ls -al /proc/$PID/cwd` );
  $cwdDir = pop( @tokens  );

  @tokens = split( " ", $cmdLine );
  foreach $tk (@tokens) {

    if (-f "$cwdDir/$tk") {
      $path = "$cwdDir/$tk" 
    } elsif (-f $tk) {
      $path = $tk; 
    } else {
      $path ="";
    }

    next if ($path eq "");
    $r =`file -L $path`;
    next if (index($r,"text") == -1);

    push(@cfgfiles,$path) if ($path ne "");
  }
	
  #$files = `ls -al /proc/$PID/fd`;

  $environ = `cat /proc/$PID/environ |  tr "\\0" "\\n"`;  

  $r = `ps -p $PID -Lf | awk '{ print \$4,\$5,\$9 }'`; 
  print OF $r; 
  @threads= split('\n', $r );
  shift (@threads);
 
 for($i=0; $i < $nreports; $i++) {
    # see here http://java.sun.com/javase/6/webnotes/trouble/other/matrix6-Unix.html
    `kill -QUIT $PID`;
    $r = `$jstk_path -F -l $PID`; 
    if ($? != 0) {
       error("jstack failed. Please check that JAVA_HOME is of the same version as debugged program");
    }
    print OF $r; 
    push (@reports,  $r );
  }
  close(OF);
}

sub parseData
{
  my ($t,$l,$tid, $treport, @tlines);

  $tid = "";
  foreach $t (@reports) {
    @tlines = split('\n',$t);
   
print "parse report..\n";

    $treport = "";
    $tid="";
    foreach $l (@tlines) {
        if ($l =~ /Thread (\d+):/) {
	  if ($tid ne "") {
	    $THREAD_STACKS{ $tid } = $THREAD_STACKS{ $tid }.$treport."\n";
	  } else  {
	    $DLOCK_REPORT=$DLOCK_REPORT.$treport."\n";
	  } 

	  $tid = $1;
	  $treport = $l;
	
	} else {
	  $treport = $treport."\n".$l;
	}	    
    }
    if ($tid ne "") {
      $THREAD_STACKS{ $tid } = $THREAD_STACKS{ $tid }.$treport."\n";
    }
  }
}

sub printReport
{
  open(OF, ">$REPORT") || die("Can't open $REPORT file for writing");

  print OF <<EOF
<html>
  <head>
     <title>Java threads of process $PID</title>
     <script>
	function toggleStack(obj)
	{
	   var divId =  "s" + obj.id; 
	   var textDiv = document.getElementById(divId);
	   if (textDiv.style.display == "none") {
	       textDiv.style.display = "block";
	       obj.value = "collapse";
	   } else {
	       textDiv.style.display = "none";
	       obj.value = "expand";
	   }
	}
     </script>
  </head>
<body>

<h3>General information on process $PID</h3>

<table border="1" width="100%">
  <tr>
      <th width="5%">Param</th>
      <th>General Info</th>
  </tr>
  <tr>
      <td>Cmdline</td>
      <td>$cmdLine</td>
  </tr>
EOF
;
  my ($fpath,$fdata,$sidx);
  
  $sidx=1;
  foreach $fpath (@cfgfiles) {

  $fdata = `cat $fpath`;

  print OF <<EOF
  <tr>
      <td>CfgFile</td>
      <td>$fpath
          <input type="button" id="cfg$sidx" value="expand" onClick="toggleStack(this);"/>
	  <div id="scfg$sidx" style="display:none">
	    <pre>$fdata</pre>
	  </div>
      </td>
  </tr>
EOF
;
    ++$sidx;	
  }


  print OF <<EOF
  <tr>
      <td>Working Dir</td>
      <td>$cwdDir</td>
  </tr>
  <tr>
      <td>Started at</td>
      <td>$stime</td>
  </tr>
   <tr>
      <td>Environment</td>
      <td>
          <input type="button" id="env" value="expand" onClick="toggleStack(this);"/>
	  <div id="senv" style="display:none">
	    <pre>$environ</pre>
	  </div>
      </td>
  </tr>
   <tr>
      <td>Deadlocks?</td>
      <td>
          <input type="button" id="sdlk" value="expand" onClick="toggleStack(this);"/>
	  <div id="ssdlk" style="display:none">
	    <pre>$DLOCK_REPORT</pre>
	  </div>
      </td>
  </tr>
  <tr>
      <td>Files</td>
      <td>
          <input type="button" id="sock" value="expand" onClick="toggleStack(this);"/>
	  <div id="ssock" style="display:none">
	    <pre>$sockets</pre>
	  </div>
      </td>
  </tr>
</table>

<h3>Java threads of process $PID</h3>


<table border="1" width="100%">
  <tr>
      <th width="5%">ThreadId</th>
      <th width="5%">CPU</th>
      <th width="5%">Time</th>
      <th width>Stack traces</th>
  </tr>
    
EOF
;
 
  my ($t,$tid,$cpu, $time, $rep);

  foreach $t (@threads) {
    chomp($t);

    ($tid, $cpu, $time) = split(' ',$t);

    if (exists $THREAD_STACKS{$tid}) {
     
      $rep = <<EOF
<input type="button" id="$tid" value="expand" onClick="toggleStack(this);"/>
<div id="s$tid" style="display:none">
<pre>
$THREAD_STACKS{$tid}; 
</pre>
</div>
EOF
;
    } else {
      $rep = "";
    }


print OF <<EOF
  <tr>
    <td>$tid</td>
    <td>$cpu\%</td>
    <td>$time</td>
    <td>$rep</td>
  </tr>
EOF
;
  }

print OF "</table>\n</html>";
  close(OF);
}


sub error
{
  my $msg = shift;

  print "Error: $msg\n" if ($msg ne "");

  print <<EOF
Usage:
./jstk.pl <processid> <output_file>

Obtains information on java process <processid> and prints
an annotated html report into outpt_file.

JAVA_HOME environment variable must be set to jdk path.
EOF
;
exit(1);
}
