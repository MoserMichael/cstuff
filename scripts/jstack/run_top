#!/bin/bash

set -e
set -x

spid=$1

if [ "x$spid" = "x" ]; then

echo <<EOF
./run_top <process_id>" [<delay>]

monitor process with top; Nice if we want to monitor memory consumption
of a process. The script finishes when the monitored process dies.

<process_id> - process that 
<delay> - top is invoked in cycle of <delay> seconds.
EOF

  exit 1
fi

LOG_FILE="runtop_$spid.log"

WITH_DELAY='20'
if [ "x$2" != "x" ]; then
  WITH_DELAY=$2
fi



cat <<HERE
running top in batch mode
  pid: $spid
  updating rate: $WITH_DELAY second
  log of top: $LOG_FILE
HERE

(
exec top -d $WITH_DELAY -p $spid -b  >$LOG_FILE 2>&1
) &

top_cmd=$!

#echo "top command is running in $top_cmd ; me is $$"

trap "kill -9 $top_cmd " SIGINT SIGTERM

while [ true ];
do
  sleep 1
  if [ ! -d /proc/$spid ]; then
     echo "monitored process is dead now"
     kill -9 $top_cmd
     exit 0
  fi
done







