021|a = [ 1 , 2 , 3 , 4 , 5] 
023|println( ~msg 'fold left - sum: ' .. foldfirst2last( ~array a:[ -> 1, -> 2, -> 3, -> 4, -> 5 ] ~func sub sum(~a , ~b) ~initval 0 )...
003| sub sum(~a , ~b)
004|  return (a:-> 1 + b:-> 0):1
003| end
003| sub sum(~a , ~b)
004|  return (a:-> 2 + b:-> 1):3
003| end
003| sub sum(~a , ~b)
004|  return (a:-> 3 + b:-> 3):6
003| end
003| sub sum(~a , ~b)
004|  return (a:-> 4 + b:-> 6):10
003| end
003| sub sum(~a , ~b)
004|  return (a:-> 5 + b:-> 10):15
003| end
023|println( ~msg 'fold left - sum: ' .. foldfirst2last( ~array a:[ -> 1, -> 2, -> 3, -> 4, -> 5 ] ~func sub sum(~a , ~b) ~initval 0 ):15 )...
024|println( ~msg 'fold right - sum: ' .. foldlast2first( ~array a:[ -> 1, -> 2, -> 3, -> 4, -> 5 ] ~func sub sum(~a , ~b) ~initval 0 )...
003| sub sum(~a , ~b)
004|  return (a:-> 5 + b:-> 0):5
003| end
003| sub sum(~a , ~b)
004|  return (a:-> 4 + b:-> 5):9
003| end
003| sub sum(~a , ~b)
004|  return (a:-> 3 + b:-> 9):12
003| end
003| sub sum(~a , ~b)
004|  return (a:-> 2 + b:-> 12):14
003| end
003| sub sum(~a , ~b)
004|  return (a:-> 1 + b:-> 14):15
003| end
024|println( ~msg 'fold right - sum: ' .. foldlast2first( ~array a:[ -> 1, -> 2, -> 3, -> 4, -> 5 ] ~func sub sum(~a , ~b) ~initval 0 ):15 )...
026|println( ~msg 'fold left - sum of squares: ' .. foldfirst2last( ~array a:[ -> 1, -> 2, -> 3, -> 4, -> 5 ] ~func sub sumsqr(~a , ~b) ~initval 0 )...
007| sub sumsqr(~a , ~b)
008|  return ((a:-> 1 * a:-> 1):1 + b:-> 0):1
007| end
007| sub sumsqr(~a , ~b)
008|  return ((a:-> 2 * a:-> 2):4 + b:-> 1):5
007| end
007| sub sumsqr(~a , ~b)
008|  return ((a:-> 3 * a:-> 3):9 + b:-> 5):14
007| end
007| sub sumsqr(~a , ~b)
008|  return ((a:-> 4 * a:-> 4):16 + b:-> 14):30
007| end
007| sub sumsqr(~a , ~b)
008|  return ((a:-> 5 * a:-> 5):25 + b:-> 30):55
007| end
026|println( ~msg 'fold left - sum of squares: ' .. foldfirst2last( ~array a:[ -> 1, -> 2, -> 3, -> 4, -> 5 ] ~func sub sumsqr(~a , ~b) ~initval 0 ):55 )...
027|println( ~msg 'fold right - sum of squares: ' .. foldlast2first( ~array a:[ -> 1, -> 2, -> 3, -> 4, -> 5 ] ~func sub sumsqr(~a , ~b) ~initval 0 )...
007| sub sumsqr(~a , ~b)
008|  return ((a:-> 5 * a:-> 5):25 + b:-> 0):25
007| end
007| sub sumsqr(~a , ~b)
008|  return ((a:-> 4 * a:-> 4):16 + b:-> 25):41
007| end
007| sub sumsqr(~a , ~b)
008|  return ((a:-> 3 * a:-> 3):9 + b:-> 41):50
007| end
007| sub sumsqr(~a , ~b)
008|  return ((a:-> 2 * a:-> 2):4 + b:-> 50):54
007| end
007| sub sumsqr(~a , ~b)
008|  return ((a:-> 1 * a:-> 1):1 + b:-> 54):55
007| end
027|println( ~msg 'fold right - sum of squares: ' .. foldlast2first( ~array a:[ -> 1, -> 2, -> 3, -> 4, -> 5 ] ~func sub sumsqr(~a , ~b) ~initval 0 ):55 )...
029|println( ~msg 'filter - filter odd numbers: ' .. filter( ~array a:[ -> 1, -> 2, -> 3, -> 4, -> 5 ] ~func sub even(~arg) )...
011| sub even(~arg)
012|  return ((arg:-> 1 % 2):1 == 0):false
011| end
011| sub even(~arg)
012|  return ((arg:-> 2 % 2):0 == 0):true
011| end
011| sub even(~arg)
012|  return ((arg:-> 3 % 2):1 == 0):false
011| end
011| sub even(~arg)
012|  return ((arg:-> 4 % 2):0 == 0):true
011| end
011| sub even(~arg)
012|  return ((arg:-> 5 % 2):1 == 0):false
011| end
029|println( ~msg 'filter - filter odd numbers: ' .. filter( ~array a:[ -> 1, -> 2, -> 3, -> 4, -> 5 ] ~func sub even(~arg) ):[ -> 2, -> 4 ] )...
031|println( ~msg '*** map - square root of numbers ***' )...
033|... = mapcopy( ~array a:[ -> 1, -> 2, -> 3, -> 4, -> 5 ] ~func sub square(~arg) )...
015| sub square(~arg)
016|  return (arg:-> 1 * arg:-> 1):1
015| end
015| sub square(~arg)
016|  return (arg:-> 2 * arg:-> 2):4
015| end
015| sub square(~arg)
016|  return (arg:-> 3 * arg:-> 3):9
015| end
015| sub square(~arg)
016|  return (arg:-> 4 * arg:-> 4):16
015| end
015| sub square(~arg)
016|  return (arg:-> 5 * arg:-> 5):25
015| end
033|sqa = mapcopy( ~array a:[ -> 1, -> 2, -> 3, -> 4, -> 5 ] ~func sub square(~arg) ):[ -> 1, -> 4, -> 9, -> 16, -> 25 ]
035|for v = 1
036| println( ~msg v:1 )...
035|end
035|for ...
035|for v = 4
036| println( ~msg v:4 )...
035|end
035|for ...
035|for v = 9
036| println( ~msg v:9 )...
035|end
035|for ...
035|for v = 16
036| println( ~msg v:16 )...
035|end
035|for ...
035|for v = 25
036| println( ~msg v:25 )...
035|end
035|for ...
035|end # finish for loop
