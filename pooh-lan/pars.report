Terminals unused in grammar

   TK_ERROR
   TK_VAR_DEF
   TK_VAR_UNDEF
   TK_ARR_DEF
   TK_CODEREF_DEF
   TK_OP_STR_REGEXMATCH
   TK_COLON
   TK_SEMICOLON


Grammar

    0 $accept: prog $end

    1 prog: TK_START_STATEMENT stmtList
    2     | TK_START_EXPRESSION expr

    3 stmtList: stmtList stmt
    4         | stmt

    5 stmt: valueDeepCopyAssignStmt
    6     | referenceCopyAssignmentStmt
    7     | includeStmt
    8     | functionCallStmt
    9     | functionDefStmt
   10     | ifStmt
   11     | forStmt
   12     | whileStmt
   13     | doWhileStmt
   14     | returnStmt
   15     | yieldStmt
   16     | breakStmt
   17     | nextStmt

   18 forStmt: TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | TK_FOR multiValueLeftHandSide expr stmtList TK_END

   20 whileStmt: TK_WHILE expr stmtList

   21 doWhileStmt: TK_DO stmtList TK_WHILE expr

   22 valueDeepCopyAssignStmt: assignmentLeftHandSide TK_ASSIGN expr

   23 referenceCopyAssignmentStmt: assignmentLeftHandSide TK_ASSIGN_REF expr

   24 assignmentLeftHandSide: varRef
   25                       | multiValueLeftHandSide

   26 multiValueLeftHandSide: TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE

   27 multiValueLeftHandSideList: multiValueLeftHandSideList TK_COMMA multiValueLeftHandSideClause
   28                           | multiValueLeftHandSideClause

   29 multiValueLeftHandSideClause: varRef
   30                             | TK_UNDERSCORE

   31 ifStmt: TK_IF condClause elseClauses TK_END

   32 elseClauses: elsifClause TK_ELSE stmtList
   33            | elsifClause

   34 elsifClause: elsifClause TK_ELSIF condClause
   35            | /* empty */

   36 condClause: expr stmtList

   37 includeStmt: TK_INCLUDE TK_STRING_CONSTANT

   38 functionDefStmt: functionPrototypeDecl stmtList TK_END

   39 functionPrototypeDecl: TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | TK_SUB TK_IDENTIFIER funcParamDecls

   41 funcParamDecls: funcParamDecls TK_COMMA TK_IDENTIFIER
   42               | TK_IDENTIFIER

   43 breakStmt: TK_BREAK

   44 nextStmt: TK_NEXT

   45 returnStmt: TK_RETURN expr
   46           | TK_RETURN

   47 yieldStmt: TK_YIELD expr

   48 expr: logicalExp
   49     | hashConstructor
   50     | listConstructor
   51     | anonymousFunction

   52 anonymousFunction: TK_SUB funcParamDecls stmtList TK_END

   53 logicalExp: logicalExp logExpOp compExp
   54           | compExp

   55 logExpOp: TK_OP_LOGICAL_AND
   56         | TK_OP_LOGICAL_OR

   57 compExp: compExp compExpOp addExp
   58        | addExp

   59 compExpOp: TK_OP_NUM_EQ
   60          | TK_OP_NUM_NE
   61          | TK_OP_NUM_LT
   62          | TK_OP_NUM_GT
   63          | TK_OP_NUM_LE
   64          | TK_OP_NUM_GE
   65          | TK_OP_STR_EQ
   66          | TK_OP_STR_NE
   67          | TK_OP_STR_LT
   68          | TK_OP_STR_GT
   69          | TK_OP_STR_LE
   70          | TK_OP_STR_GE

   71 addExp: addExp addExpOp multExp
   72       | multExp

   73 addExpOp: TK_OP_NUM_SUBST
   74         | TK_OP_STR_CAT
   75         | TK_OP_NUM_ADD

   76 multExp: multExp multExpOp unaryExp
   77        | unaryExp

   78 multExpOp: TK_OP_NUM_DIV
   79          | TK_OP_NUM_MULT
   80          | TK_OP_NUM_MOD

   81 unaryExp: unaryExpOpPrefix primaryExp
   82         | primaryExp

   83 unaryExpOpPrefix: TK_OP_NUM_ADD
   84                 | TK_OP_NUM_SUBST
   85                 | TK_OP_LOGICAL_NEGATE

   86 primaryExp: varRef
   87           | TK_INTEGER_CONSTANT
   88           | TK_DOUBLE_CONSTANT
   89           | TK_MULTI_PART_STRING_CONSTANT
   90           | TK_STRING_CONSTANT
   91           | TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | functionCallStmt

   93 varRef: TK_IDENTIFIER collectionRefs
   94       | TK_IDENTIFIER varRefCont
   95       | TK_IDENTIFIER

   96 varRefCont: varRefCont TK_OP_DOT varRefContID
   97           | TK_OP_DOT varRefContID

   98 varRefContID: TK_IDENTIFIER

   99 collectionRefs: collectionRefs oneRef
  100               | oneRef

  101 oneRef: TK_BRACE_OPEN expr TK_BRACE_CLOSE
  102       | TK_BRACKET_OPEN expr TK_BRACKET_CLOSE

  103 functionCallStmt: varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

  104 functionArgList: functionArgList TK_COMMA expr
  105                | expr
  106                | /* empty */

  107 listConstructor: TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE

  108 expressionList: expressionList TK_COMMA expr
  109               | expr
  110               | /* empty */

  111 hashConstructor: TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

  112 hashClauseList: hashClauseList TK_COMMA hashClause
  113               | hashClause
  114               | /* empty */

  115 hashClause: expr TK_HASH_IT expr


Terminals, with rules where they appear

$end (0) 0
error (256)
TK_ERROR (258)
TK_INCLUDE (259) 37
TK_SUB (260) 39 40 52
TK_DOUBLE_CONSTANT (261) 88
TK_MULTI_PART_STRING_CONSTANT (262) 89
TK_STRING_CONSTANT (263) 37 90
TK_INTEGER_CONSTANT (264) 87
TK_IDENTIFIER (265) 18 39 40 41 42 93 94 95 98
TK_NEXT (266) 44
TK_BREAK (267) 43
TK_YIELD (268) 47
TK_RETURN (269) 45 46
TK_END (270) 18 19 31 38 52
TK_ELSIF (271) 34
TK_ELSE (272) 32
TK_ASSIGN_REF (273) 23
TK_ASSIGN (274) 22
TK_DO (275) 21
TK_IF (276) 31
TK_FOR (277) 18 19
TK_WHILE (278) 20 21
TK_OP_LOGICAL_AND (279) 55
TK_OP_LOGICAL_OR (280) 56
TK_OP_NUM_EQ (281) 59
TK_OP_NUM_NE (282) 60
TK_OP_NUM_LT (283) 61
TK_OP_NUM_GT (284) 62
TK_OP_NUM_LE (285) 63
TK_OP_NUM_GE (286) 64
TK_OP_DOT (287) 96 97
TK_OP_STR_EQ (288) 65
TK_OP_STR_NE (289) 66
TK_OP_STR_LT (290) 67
TK_OP_STR_GT (291) 68
TK_OP_STR_LE (292) 69
TK_OP_STR_GE (293) 70
TK_OP_STR_CAT (294) 74
TK_HASH_IT (295) 115
TK_OP_NUM_ADD (296) 75 83
TK_OP_NUM_SUBST (297) 73 84
TK_OP_NUM_DIV (298) 78
TK_OP_NUM_MULT (299) 79
TK_OP_NUM_MOD (300) 80
TK_OP_LOGICAL_NEGATE (301) 85
TK_VAR_DEF (302)
TK_VAR_UNDEF (303)
TK_ARR_DEF (304)
TK_CODEREF_DEF (305)
TK_OP_STR_REGEXMATCH (306)
TK_COLON (307)
TK_SEMICOLON (308)
TK_COMMA (309) 27 41 104 108 112
TK_PARENTHESES_OPEN (310) 39 91 103
TK_PARENTHESES_CLOSE (311) 39 91 103
TK_BRACE_OPEN (312) 101 111
TK_BRACE_CLOSE (313) 101 111
TK_UNDERSCORE (314) 30
TK_BRACKET_CLOSE (315) 26 102 107
TK_BRACKET_OPEN (316) 26 102 107
TK_START_STATEMENT (317) 1
TK_START_EXPRESSION (318) 2


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
prog (65)
    on left: 1 2, on right: 0
stmtList (66)
    on left: 3 4, on right: 1 3 18 19 20 21 32 36 38 52
stmt (67)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 3 4
forStmt (68)
    on left: 18 19, on right: 11
whileStmt (69)
    on left: 20, on right: 12
doWhileStmt (70)
    on left: 21, on right: 13
valueDeepCopyAssignStmt (71)
    on left: 22, on right: 5
referenceCopyAssignmentStmt (72)
    on left: 23, on right: 6
assignmentLeftHandSide (73)
    on left: 24 25, on right: 22 23
multiValueLeftHandSide (74)
    on left: 26, on right: 19 25
multiValueLeftHandSideList (75)
    on left: 27 28, on right: 26 27
multiValueLeftHandSideClause (76)
    on left: 29 30, on right: 27 28
ifStmt (77)
    on left: 31, on right: 10
elseClauses (78)
    on left: 32 33, on right: 31
elsifClause (79)
    on left: 34 35, on right: 32 33 34
condClause (80)
    on left: 36, on right: 31 34
includeStmt (81)
    on left: 37, on right: 7
functionDefStmt (82)
    on left: 38, on right: 9
functionPrototypeDecl (83)
    on left: 39 40, on right: 38
funcParamDecls (84)
    on left: 41 42, on right: 39 40 41 52
breakStmt (85)
    on left: 43, on right: 16
nextStmt (86)
    on left: 44, on right: 17
returnStmt (87)
    on left: 45 46, on right: 14
yieldStmt (88)
    on left: 47, on right: 15
expr (89)
    on left: 48 49 50 51, on right: 2 18 19 20 21 22 23 36 45 47 91
    101 102 104 105 108 109 115
anonymousFunction (90)
    on left: 52, on right: 51
logicalExp (91)
    on left: 53 54, on right: 48 53
logExpOp (92)
    on left: 55 56, on right: 53
compExp (93)
    on left: 57 58, on right: 53 54 57
compExpOp (94)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70, on right: 57
addExp (95)
    on left: 71 72, on right: 57 58 71
addExpOp (96)
    on left: 73 74 75, on right: 71
multExp (97)
    on left: 76 77, on right: 71 72 76
multExpOp (98)
    on left: 78 79 80, on right: 76
unaryExp (99)
    on left: 81 82, on right: 76 77
unaryExpOpPrefix (100)
    on left: 83 84 85, on right: 81
primaryExp (101)
    on left: 86 87 88 89 90 91 92, on right: 81 82
varRef (102)
    on left: 93 94 95, on right: 24 29 86 103
varRefCont (103)
    on left: 96 97, on right: 94 96
varRefContID (104)
    on left: 98, on right: 96 97
collectionRefs (105)
    on left: 99 100, on right: 93 99
oneRef (106)
    on left: 101 102, on right: 99 100
functionCallStmt (107)
    on left: 103, on right: 8 92
functionArgList (108)
    on left: 104 105 106, on right: 103 104
listConstructor (109)
    on left: 107, on right: 50
expressionList (110)
    on left: 108 109 110, on right: 107 108
hashConstructor (111)
    on left: 111, on right: 49
hashClauseList (112)
    on left: 112 113 114, on right: 111 112
hashClause (113)
    on left: 115, on right: 112 113


state 0

    0 $accept: . prog $end
    1 prog: . TK_START_STATEMENT stmtList
    2     | . TK_START_EXPRESSION expr

    TK_START_STATEMENT   shift, and go to state 1
    TK_START_EXPRESSION  shift, and go to state 2

    prog  go to state 3


state 1

    1 prog: TK_START_STATEMENT . stmtList
    3 stmtList: . stmtList stmt
    4         | . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    stmtList                     go to state 16
    stmt                         go to state 17
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 2

    2 prog: TK_START_EXPRESSION . expr
   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 46
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 3

    0 $accept: prog . $end

    $end  shift, and go to state 59


state 4

   37 includeStmt: TK_INCLUDE . TK_STRING_CONSTANT

    TK_STRING_CONSTANT  shift, and go to state 60


state 5

   39 functionPrototypeDecl: TK_SUB . TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | TK_SUB . TK_IDENTIFIER funcParamDecls

    TK_IDENTIFIER  shift, and go to state 61


state 6

   93 varRef: TK_IDENTIFIER . collectionRefs
   94       | TK_IDENTIFIER . varRefCont
   95       | TK_IDENTIFIER .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_ASSIGN_REF, TK_ASSIGN, TK_DO, TK_IF, TK_FOR, TK_WHILE, TK_OP_LOGICAL_AND, TK_OP_LOGICAL_OR, TK_OP_NUM_EQ, TK_OP_NUM_NE, TK_OP_NUM_LT, TK_OP_NUM_GT, TK_OP_NUM_LE, TK_OP_NUM_GE, TK_OP_STR_EQ, TK_OP_STR_NE, TK_OP_STR_LT, TK_OP_STR_GT, TK_OP_STR_LE, TK_OP_STR_GE, TK_OP_STR_CAT, TK_HASH_IT, TK_OP_NUM_ADD, TK_OP_NUM_SUBST, TK_OP_NUM_DIV, TK_OP_NUM_MULT, TK_OP_NUM_MOD, TK_COMMA, TK_PARENTHESES_OPEN, TK_PARENTHESES_CLOSE, TK_BRACE_CLOSE, TK_BRACKET_CLOSE]
   96 varRefCont: . varRefCont TK_OP_DOT varRefContID
   97           | . TK_OP_DOT varRefContID
   99 collectionRefs: . collectionRefs oneRef
  100               | . oneRef
  101 oneRef: . TK_BRACE_OPEN expr TK_BRACE_CLOSE
  102       | . TK_BRACKET_OPEN expr TK_BRACKET_CLOSE

    TK_OP_DOT        shift, and go to state 62
    TK_BRACE_OPEN    shift, and go to state 63
    TK_BRACKET_OPEN  shift, and go to state 64

    $default  reduce using rule 95 (varRef)

    varRefCont      go to state 65
    collectionRefs  go to state 66
    oneRef          go to state 67

    Conflict between rule 95 and token TK_BRACKET_OPEN resolved as shift (TK_IDENTIFIER < TK_BRACKET_OPEN).


state 7

   44 nextStmt: TK_NEXT .

    $default  reduce using rule 44 (nextStmt)


state 8

   43 breakStmt: TK_BREAK .

    $default  reduce using rule 43 (breakStmt)


state 9

   47 yieldStmt: TK_YIELD . expr
   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 68
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 10

   45 returnStmt: TK_RETURN . expr
   46           | TK_RETURN .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_DO, TK_IF, TK_FOR, TK_WHILE]
   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    $default  reduce using rule 46 (returnStmt)

    expr               go to state 69
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58

    Conflict between rule 46 and token TK_SUB resolved as reduce (%left TK_SUB).
    Conflict between rule 46 and token TK_IDENTIFIER resolved as reduce (%left TK_IDENTIFIER).
    Conflict between rule 46 and token TK_BRACKET_OPEN resolved as shift (TK_RETURN < TK_BRACKET_OPEN).


state 11

    3 stmtList: . stmtList stmt
    4         | . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   21            | TK_DO . stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    stmtList                     go to state 70
    stmt                         go to state 17
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 12

   31 ifStmt: TK_IF . condClause elseClauses TK_END
   36 condClause: . expr stmtList
   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    condClause         go to state 71
    expr               go to state 72
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 13

   18 forStmt: TK_FOR . TK_IDENTIFIER expr stmtList TK_END
   19        | TK_FOR . multiValueLeftHandSide expr stmtList TK_END
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE

    TK_IDENTIFIER    shift, and go to state 73
    TK_BRACKET_OPEN  shift, and go to state 15

    multiValueLeftHandSide  go to state 74


state 14

   20 whileStmt: TK_WHILE . expr stmtList
   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 75
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 15

   26 multiValueLeftHandSide: TK_BRACKET_OPEN . multiValueLeftHandSideList TK_BRACKET_CLOSE
   27 multiValueLeftHandSideList: . multiValueLeftHandSideList TK_COMMA multiValueLeftHandSideClause
   28                           | . multiValueLeftHandSideClause
   29 multiValueLeftHandSideClause: . varRef
   30                             | . TK_UNDERSCORE
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 6
    TK_UNDERSCORE  shift, and go to state 76

    multiValueLeftHandSideList    go to state 77
    multiValueLeftHandSideClause  go to state 78
    varRef                        go to state 79


state 16

    1 prog: TK_START_STATEMENT stmtList .  [$end]
    3 stmtList: stmtList . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    $default  reduce using rule 1 (prog)

    stmt                         go to state 80
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 17

    4 stmtList: stmt .

    $default  reduce using rule 4 (stmtList)


state 18

   11 stmt: forStmt .

    $default  reduce using rule 11 (stmt)


state 19

   12 stmt: whileStmt .

    $default  reduce using rule 12 (stmt)


state 20

   13 stmt: doWhileStmt .

    $default  reduce using rule 13 (stmt)


state 21

    5 stmt: valueDeepCopyAssignStmt .

    $default  reduce using rule 5 (stmt)


state 22

    6 stmt: referenceCopyAssignmentStmt .

    $default  reduce using rule 6 (stmt)


state 23

   22 valueDeepCopyAssignStmt: assignmentLeftHandSide . TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: assignmentLeftHandSide . TK_ASSIGN_REF expr

    TK_ASSIGN_REF  shift, and go to state 81
    TK_ASSIGN      shift, and go to state 82


state 24

   25 assignmentLeftHandSide: multiValueLeftHandSide .

    $default  reduce using rule 25 (assignmentLeftHandSide)


state 25

   10 stmt: ifStmt .

    $default  reduce using rule 10 (stmt)


state 26

    7 stmt: includeStmt .

    $default  reduce using rule 7 (stmt)


state 27

    9 stmt: functionDefStmt .

    $default  reduce using rule 9 (stmt)


state 28

    3 stmtList: . stmtList stmt
    4         | . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   38                | functionPrototypeDecl . stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    stmtList                     go to state 83
    stmt                         go to state 17
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 29

   16 stmt: breakStmt .

    $default  reduce using rule 16 (stmt)


state 30

   17 stmt: nextStmt .

    $default  reduce using rule 17 (stmt)


state 31

   14 stmt: returnStmt .

    $default  reduce using rule 14 (stmt)


state 32

   15 stmt: yieldStmt .

    $default  reduce using rule 15 (stmt)


state 33

   24 assignmentLeftHandSide: varRef .  [TK_ASSIGN_REF, TK_ASSIGN]
  103 functionCallStmt: varRef . TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_PARENTHESES_OPEN  shift, and go to state 84

    $default  reduce using rule 24 (assignmentLeftHandSide)


state 34

    8 stmt: functionCallStmt .

    $default  reduce using rule 8 (stmt)


state 35

   41 funcParamDecls: . funcParamDecls TK_COMMA TK_IDENTIFIER
   42               | . TK_IDENTIFIER
   52 anonymousFunction: TK_SUB . funcParamDecls stmtList TK_END

    TK_IDENTIFIER  shift, and go to state 85

    funcParamDecls  go to state 86


state 36

   88 primaryExp: TK_DOUBLE_CONSTANT .

    $default  reduce using rule 88 (primaryExp)


state 37

   89 primaryExp: TK_MULTI_PART_STRING_CONSTANT .

    $default  reduce using rule 89 (primaryExp)


state 38

   90 primaryExp: TK_STRING_CONSTANT .

    $default  reduce using rule 90 (primaryExp)


state 39

   87 primaryExp: TK_INTEGER_CONSTANT .

    $default  reduce using rule 87 (primaryExp)


state 40

   83 unaryExpOpPrefix: TK_OP_NUM_ADD .

    $default  reduce using rule 83 (unaryExpOpPrefix)


state 41

   84 unaryExpOpPrefix: TK_OP_NUM_SUBST .

    $default  reduce using rule 84 (unaryExpOpPrefix)


state 42

   85 unaryExpOpPrefix: TK_OP_LOGICAL_NEGATE .

    $default  reduce using rule 85 (unaryExpOpPrefix)


state 43

   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   91           | TK_PARENTHESES_OPEN . expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 87
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 44

   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE
  111                | TK_BRACE_OPEN . hashClauseList TK_BRACE_CLOSE
  112 hashClauseList: . hashClauseList TK_COMMA hashClause
  113               | . hashClause
  114               | .  [TK_COMMA, TK_BRACE_CLOSE]
  115 hashClause: . expr TK_HASH_IT expr

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    $default  reduce using rule 114 (hashClauseList)

    expr               go to state 88
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58
    hashClauseList     go to state 89
    hashClause         go to state 90


state 45

   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  107                | TK_BRACKET_OPEN . expressionList TK_BRACKET_CLOSE
  108 expressionList: . expressionList TK_COMMA expr
  109               | . expr
  110               | .  [TK_COMMA, TK_BRACKET_CLOSE]
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    $default  reduce using rule 110 (expressionList)

    expr               go to state 91
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    expressionList     go to state 92
    hashConstructor    go to state 58


state 46

    2 prog: TK_START_EXPRESSION expr .

    $default  reduce using rule 2 (prog)


state 47

   51 expr: anonymousFunction .

    $default  reduce using rule 51 (expr)


state 48

   48 expr: logicalExp .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_DO, TK_IF, TK_FOR, TK_WHILE, TK_HASH_IT, TK_COMMA, TK_PARENTHESES_CLOSE, TK_BRACE_CLOSE, TK_BRACKET_CLOSE, TK_BRACKET_OPEN]
   53 logicalExp: logicalExp . logExpOp compExp
   55 logExpOp: . TK_OP_LOGICAL_AND
   56         | . TK_OP_LOGICAL_OR

    TK_OP_LOGICAL_AND  shift, and go to state 93
    TK_OP_LOGICAL_OR   shift, and go to state 94

    $default  reduce using rule 48 (expr)

    logExpOp  go to state 95


state 49

   54 logicalExp: compExp .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_DO, TK_IF, TK_FOR, TK_WHILE, TK_OP_LOGICAL_AND, TK_OP_LOGICAL_OR, TK_HASH_IT, TK_COMMA, TK_PARENTHESES_CLOSE, TK_BRACE_CLOSE, TK_BRACKET_CLOSE, TK_BRACKET_OPEN]
   57 compExp: compExp . compExpOp addExp
   59 compExpOp: . TK_OP_NUM_EQ
   60          | . TK_OP_NUM_NE
   61          | . TK_OP_NUM_LT
   62          | . TK_OP_NUM_GT
   63          | . TK_OP_NUM_LE
   64          | . TK_OP_NUM_GE
   65          | . TK_OP_STR_EQ
   66          | . TK_OP_STR_NE
   67          | . TK_OP_STR_LT
   68          | . TK_OP_STR_GT
   69          | . TK_OP_STR_LE
   70          | . TK_OP_STR_GE

    TK_OP_NUM_EQ  shift, and go to state 96
    TK_OP_NUM_NE  shift, and go to state 97
    TK_OP_NUM_LT  shift, and go to state 98
    TK_OP_NUM_GT  shift, and go to state 99
    TK_OP_NUM_LE  shift, and go to state 100
    TK_OP_NUM_GE  shift, and go to state 101
    TK_OP_STR_EQ  shift, and go to state 102
    TK_OP_STR_NE  shift, and go to state 103
    TK_OP_STR_LT  shift, and go to state 104
    TK_OP_STR_GT  shift, and go to state 105
    TK_OP_STR_LE  shift, and go to state 106
    TK_OP_STR_GE  shift, and go to state 107

    $default  reduce using rule 54 (logicalExp)

    compExpOp  go to state 108


state 50

   58 compExp: addExp .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_DO, TK_IF, TK_FOR, TK_WHILE, TK_OP_LOGICAL_AND, TK_OP_LOGICAL_OR, TK_OP_NUM_EQ, TK_OP_NUM_NE, TK_OP_NUM_LT, TK_OP_NUM_GT, TK_OP_NUM_LE, TK_OP_NUM_GE, TK_OP_STR_EQ, TK_OP_STR_NE, TK_OP_STR_LT, TK_OP_STR_GT, TK_OP_STR_LE, TK_OP_STR_GE, TK_HASH_IT, TK_COMMA, TK_PARENTHESES_CLOSE, TK_BRACE_CLOSE, TK_BRACKET_CLOSE, TK_BRACKET_OPEN]
   71 addExp: addExp . addExpOp multExp
   73 addExpOp: . TK_OP_NUM_SUBST
   74         | . TK_OP_STR_CAT
   75         | . TK_OP_NUM_ADD

    TK_OP_STR_CAT    shift, and go to state 109
    TK_OP_NUM_ADD    shift, and go to state 110
    TK_OP_NUM_SUBST  shift, and go to state 111

    $default  reduce using rule 58 (compExp)

    addExpOp  go to state 112


state 51

   72 addExp: multExp .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_DO, TK_IF, TK_FOR, TK_WHILE, TK_OP_LOGICAL_AND, TK_OP_LOGICAL_OR, TK_OP_NUM_EQ, TK_OP_NUM_NE, TK_OP_NUM_LT, TK_OP_NUM_GT, TK_OP_NUM_LE, TK_OP_NUM_GE, TK_OP_STR_EQ, TK_OP_STR_NE, TK_OP_STR_LT, TK_OP_STR_GT, TK_OP_STR_LE, TK_OP_STR_GE, TK_OP_STR_CAT, TK_HASH_IT, TK_OP_NUM_ADD, TK_OP_NUM_SUBST, TK_COMMA, TK_PARENTHESES_CLOSE, TK_BRACE_CLOSE, TK_BRACKET_CLOSE, TK_BRACKET_OPEN]
   76 multExp: multExp . multExpOp unaryExp
   78 multExpOp: . TK_OP_NUM_DIV
   79          | . TK_OP_NUM_MULT
   80          | . TK_OP_NUM_MOD

    TK_OP_NUM_DIV   shift, and go to state 113
    TK_OP_NUM_MULT  shift, and go to state 114
    TK_OP_NUM_MOD   shift, and go to state 115

    $default  reduce using rule 72 (addExp)

    multExpOp  go to state 116


state 52

   77 multExp: unaryExp .

    $default  reduce using rule 77 (multExp)


state 53

   81 unaryExp: unaryExpOpPrefix . primaryExp
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_PARENTHESES_OPEN            shift, and go to state 43

    primaryExp        go to state 117
    varRef            go to state 55
    functionCallStmt  go to state 56


state 54

   82 unaryExp: primaryExp .

    $default  reduce using rule 82 (unaryExp)


state 55

   86 primaryExp: varRef .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_DO, TK_IF, TK_FOR, TK_WHILE, TK_OP_LOGICAL_AND, TK_OP_LOGICAL_OR, TK_OP_NUM_EQ, TK_OP_NUM_NE, TK_OP_NUM_LT, TK_OP_NUM_GT, TK_OP_NUM_LE, TK_OP_NUM_GE, TK_OP_STR_EQ, TK_OP_STR_NE, TK_OP_STR_LT, TK_OP_STR_GT, TK_OP_STR_LE, TK_OP_STR_GE, TK_OP_STR_CAT, TK_HASH_IT, TK_OP_NUM_ADD, TK_OP_NUM_SUBST, TK_OP_NUM_DIV, TK_OP_NUM_MULT, TK_OP_NUM_MOD, TK_COMMA, TK_PARENTHESES_CLOSE, TK_BRACE_CLOSE, TK_BRACKET_CLOSE, TK_BRACKET_OPEN]
  103 functionCallStmt: varRef . TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_PARENTHESES_OPEN  shift, and go to state 84

    $default  reduce using rule 86 (primaryExp)


state 56

   92 primaryExp: functionCallStmt .

    $default  reduce using rule 92 (primaryExp)


state 57

   50 expr: listConstructor .

    $default  reduce using rule 50 (expr)


state 58

   49 expr: hashConstructor .

    $default  reduce using rule 49 (expr)


state 59

    0 $accept: prog $end .

    $default  accept


state 60

   37 includeStmt: TK_INCLUDE TK_STRING_CONSTANT .

    $default  reduce using rule 37 (includeStmt)


state 61

   39 functionPrototypeDecl: TK_SUB TK_IDENTIFIER . TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | TK_SUB TK_IDENTIFIER . funcParamDecls
   41 funcParamDecls: . funcParamDecls TK_COMMA TK_IDENTIFIER
   42               | . TK_IDENTIFIER

    TK_IDENTIFIER        shift, and go to state 85
    TK_PARENTHESES_OPEN  shift, and go to state 118

    funcParamDecls  go to state 119


state 62

   97 varRefCont: TK_OP_DOT . varRefContID
   98 varRefContID: . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 120

    varRefContID  go to state 121


state 63

   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  101 oneRef: TK_BRACE_OPEN . expr TK_BRACE_CLOSE
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 122
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 64

   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  102 oneRef: TK_BRACKET_OPEN . expr TK_BRACKET_CLOSE
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 123
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 65

   94 varRef: TK_IDENTIFIER varRefCont .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_ASSIGN_REF, TK_ASSIGN, TK_DO, TK_IF, TK_FOR, TK_WHILE, TK_OP_LOGICAL_AND, TK_OP_LOGICAL_OR, TK_OP_NUM_EQ, TK_OP_NUM_NE, TK_OP_NUM_LT, TK_OP_NUM_GT, TK_OP_NUM_LE, TK_OP_NUM_GE, TK_OP_STR_EQ, TK_OP_STR_NE, TK_OP_STR_LT, TK_OP_STR_GT, TK_OP_STR_LE, TK_OP_STR_GE, TK_OP_STR_CAT, TK_HASH_IT, TK_OP_NUM_ADD, TK_OP_NUM_SUBST, TK_OP_NUM_DIV, TK_OP_NUM_MULT, TK_OP_NUM_MOD, TK_COMMA, TK_PARENTHESES_OPEN, TK_PARENTHESES_CLOSE, TK_BRACE_CLOSE, TK_BRACKET_CLOSE, TK_BRACKET_OPEN]
   96 varRefCont: varRefCont . TK_OP_DOT varRefContID

    TK_OP_DOT  shift, and go to state 124

    $default  reduce using rule 94 (varRef)


state 66

   93 varRef: TK_IDENTIFIER collectionRefs .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_ASSIGN_REF, TK_ASSIGN, TK_DO, TK_IF, TK_FOR, TK_WHILE, TK_OP_LOGICAL_AND, TK_OP_LOGICAL_OR, TK_OP_NUM_EQ, TK_OP_NUM_NE, TK_OP_NUM_LT, TK_OP_NUM_GT, TK_OP_NUM_LE, TK_OP_NUM_GE, TK_OP_STR_EQ, TK_OP_STR_NE, TK_OP_STR_LT, TK_OP_STR_GT, TK_OP_STR_LE, TK_OP_STR_GE, TK_OP_STR_CAT, TK_HASH_IT, TK_OP_NUM_ADD, TK_OP_NUM_SUBST, TK_OP_NUM_DIV, TK_OP_NUM_MULT, TK_OP_NUM_MOD, TK_COMMA, TK_PARENTHESES_OPEN, TK_PARENTHESES_CLOSE, TK_BRACE_CLOSE, TK_BRACKET_CLOSE]
   99 collectionRefs: collectionRefs . oneRef
  101 oneRef: . TK_BRACE_OPEN expr TK_BRACE_CLOSE
  102       | . TK_BRACKET_OPEN expr TK_BRACKET_CLOSE

    TK_BRACE_OPEN    shift, and go to state 63
    TK_BRACKET_OPEN  shift, and go to state 64

    $default  reduce using rule 93 (varRef)

    oneRef  go to state 125

    Conflict between rule 93 and token TK_BRACKET_OPEN resolved as shift (TK_IDENTIFIER < TK_BRACKET_OPEN).


state 67

  100 collectionRefs: oneRef .

    $default  reduce using rule 100 (collectionRefs)


state 68

   47 yieldStmt: TK_YIELD expr .

    $default  reduce using rule 47 (yieldStmt)


state 69

   45 returnStmt: TK_RETURN expr .

    $default  reduce using rule 45 (returnStmt)


state 70

    3 stmtList: stmtList . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   21            | TK_DO stmtList . TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 126
    TK_BRACKET_OPEN  shift, and go to state 15

    stmt                         go to state 80
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 71

   31 ifStmt: TK_IF condClause . elseClauses TK_END
   32 elseClauses: . elsifClause TK_ELSE stmtList
   33            | . elsifClause
   34 elsifClause: . elsifClause TK_ELSIF condClause
   35            | .

    $default  reduce using rule 35 (elsifClause)

    elseClauses  go to state 127
    elsifClause  go to state 128


state 72

    3 stmtList: . stmtList stmt
    4         | . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   36 condClause: expr . stmtList
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    stmtList                     go to state 129
    stmt                         go to state 17
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 73

   18 forStmt: TK_FOR TK_IDENTIFIER . expr stmtList TK_END
   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 130
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 74

   19 forStmt: TK_FOR multiValueLeftHandSide . expr stmtList TK_END
   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 131
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 75

    3 stmtList: . stmtList stmt
    4         | . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   20          | TK_WHILE expr . stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    stmtList                     go to state 132
    stmt                         go to state 17
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 76

   30 multiValueLeftHandSideClause: TK_UNDERSCORE .

    $default  reduce using rule 30 (multiValueLeftHandSideClause)


state 77

   26 multiValueLeftHandSide: TK_BRACKET_OPEN multiValueLeftHandSideList . TK_BRACKET_CLOSE
   27 multiValueLeftHandSideList: multiValueLeftHandSideList . TK_COMMA multiValueLeftHandSideClause

    TK_COMMA          shift, and go to state 133
    TK_BRACKET_CLOSE  shift, and go to state 134


state 78

   28 multiValueLeftHandSideList: multiValueLeftHandSideClause .

    $default  reduce using rule 28 (multiValueLeftHandSideList)


state 79

   29 multiValueLeftHandSideClause: varRef .

    $default  reduce using rule 29 (multiValueLeftHandSideClause)


state 80

    3 stmtList: stmtList stmt .

    $default  reduce using rule 3 (stmtList)


state 81

   23 referenceCopyAssignmentStmt: assignmentLeftHandSide TK_ASSIGN_REF . expr
   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 135
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 82

   22 valueDeepCopyAssignStmt: assignmentLeftHandSide TK_ASSIGN . expr
   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 136
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 83

    3 stmtList: stmtList . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   38                | functionPrototypeDecl stmtList . TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_END           shift, and go to state 137
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    stmt                         go to state 80
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 84

   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  103                 | varRef TK_PARENTHESES_OPEN . functionArgList TK_PARENTHESES_CLOSE
  104 functionArgList: . functionArgList TK_COMMA expr
  105                | . expr
  106                | .  [TK_COMMA, TK_PARENTHESES_CLOSE]
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    $default  reduce using rule 106 (functionArgList)

    expr               go to state 138
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    functionArgList    go to state 139
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 85

   42 funcParamDecls: TK_IDENTIFIER .

    $default  reduce using rule 42 (funcParamDecls)


state 86

    3 stmtList: . stmtList stmt
    4         | . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   41 funcParamDecls: funcParamDecls . TK_COMMA TK_IDENTIFIER
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   52 anonymousFunction: TK_SUB funcParamDecls . stmtList TK_END
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_COMMA         shift, and go to state 140
    TK_BRACKET_OPEN  shift, and go to state 15

    stmtList                     go to state 141
    stmt                         go to state 17
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 87

   91 primaryExp: TK_PARENTHESES_OPEN expr . TK_PARENTHESES_CLOSE

    TK_PARENTHESES_CLOSE  shift, and go to state 142


state 88

  115 hashClause: expr . TK_HASH_IT expr

    TK_HASH_IT  shift, and go to state 143


state 89

  111 hashConstructor: TK_BRACE_OPEN hashClauseList . TK_BRACE_CLOSE
  112 hashClauseList: hashClauseList . TK_COMMA hashClause

    TK_COMMA        shift, and go to state 144
    TK_BRACE_CLOSE  shift, and go to state 145


state 90

  113 hashClauseList: hashClause .

    $default  reduce using rule 113 (hashClauseList)


state 91

  109 expressionList: expr .

    $default  reduce using rule 109 (expressionList)


state 92

  107 listConstructor: TK_BRACKET_OPEN expressionList . TK_BRACKET_CLOSE
  108 expressionList: expressionList . TK_COMMA expr

    TK_COMMA          shift, and go to state 146
    TK_BRACKET_CLOSE  shift, and go to state 147


state 93

   55 logExpOp: TK_OP_LOGICAL_AND .

    $default  reduce using rule 55 (logExpOp)


state 94

   56 logExpOp: TK_OP_LOGICAL_OR .

    $default  reduce using rule 56 (logExpOp)


state 95

   53 logicalExp: logicalExp logExpOp . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43

    compExp           go to state 148
    addExp            go to state 50
    multExp           go to state 51
    unaryExp          go to state 52
    unaryExpOpPrefix  go to state 53
    primaryExp        go to state 54
    varRef            go to state 55
    functionCallStmt  go to state 56


state 96

   59 compExpOp: TK_OP_NUM_EQ .

    $default  reduce using rule 59 (compExpOp)


state 97

   60 compExpOp: TK_OP_NUM_NE .

    $default  reduce using rule 60 (compExpOp)


state 98

   61 compExpOp: TK_OP_NUM_LT .

    $default  reduce using rule 61 (compExpOp)


state 99

   62 compExpOp: TK_OP_NUM_GT .

    $default  reduce using rule 62 (compExpOp)


state 100

   63 compExpOp: TK_OP_NUM_LE .

    $default  reduce using rule 63 (compExpOp)


state 101

   64 compExpOp: TK_OP_NUM_GE .

    $default  reduce using rule 64 (compExpOp)


state 102

   65 compExpOp: TK_OP_STR_EQ .

    $default  reduce using rule 65 (compExpOp)


state 103

   66 compExpOp: TK_OP_STR_NE .

    $default  reduce using rule 66 (compExpOp)


state 104

   67 compExpOp: TK_OP_STR_LT .

    $default  reduce using rule 67 (compExpOp)


state 105

   68 compExpOp: TK_OP_STR_GT .

    $default  reduce using rule 68 (compExpOp)


state 106

   69 compExpOp: TK_OP_STR_LE .

    $default  reduce using rule 69 (compExpOp)


state 107

   70 compExpOp: TK_OP_STR_GE .

    $default  reduce using rule 70 (compExpOp)


state 108

   57 compExp: compExp compExpOp . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43

    addExp            go to state 149
    multExp           go to state 51
    unaryExp          go to state 52
    unaryExpOpPrefix  go to state 53
    primaryExp        go to state 54
    varRef            go to state 55
    functionCallStmt  go to state 56


state 109

   74 addExpOp: TK_OP_STR_CAT .

    $default  reduce using rule 74 (addExpOp)


state 110

   75 addExpOp: TK_OP_NUM_ADD .

    $default  reduce using rule 75 (addExpOp)


state 111

   73 addExpOp: TK_OP_NUM_SUBST .

    $default  reduce using rule 73 (addExpOp)


state 112

   71 addExp: addExp addExpOp . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43

    multExp           go to state 150
    unaryExp          go to state 52
    unaryExpOpPrefix  go to state 53
    primaryExp        go to state 54
    varRef            go to state 55
    functionCallStmt  go to state 56


state 113

   78 multExpOp: TK_OP_NUM_DIV .

    $default  reduce using rule 78 (multExpOp)


state 114

   79 multExpOp: TK_OP_NUM_MULT .

    $default  reduce using rule 79 (multExpOp)


state 115

   80 multExpOp: TK_OP_NUM_MOD .

    $default  reduce using rule 80 (multExpOp)


state 116

   76 multExp: multExp multExpOp . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43

    unaryExp          go to state 151
    unaryExpOpPrefix  go to state 53
    primaryExp        go to state 54
    varRef            go to state 55
    functionCallStmt  go to state 56


state 117

   81 unaryExp: unaryExpOpPrefix primaryExp .

    $default  reduce using rule 81 (unaryExp)


state 118

   39 functionPrototypeDecl: TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN . funcParamDecls TK_PARENTHESES_CLOSE
   41 funcParamDecls: . funcParamDecls TK_COMMA TK_IDENTIFIER
   42               | . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 85

    funcParamDecls  go to state 152


state 119

   40 functionPrototypeDecl: TK_SUB TK_IDENTIFIER funcParamDecls .  [TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_DO, TK_IF, TK_FOR, TK_WHILE, TK_BRACKET_OPEN]
   41 funcParamDecls: funcParamDecls . TK_COMMA TK_IDENTIFIER

    TK_COMMA  shift, and go to state 140

    $default  reduce using rule 40 (functionPrototypeDecl)


state 120

   98 varRefContID: TK_IDENTIFIER .

    $default  reduce using rule 98 (varRefContID)


state 121

   97 varRefCont: TK_OP_DOT varRefContID .

    $default  reduce using rule 97 (varRefCont)


state 122

  101 oneRef: TK_BRACE_OPEN expr . TK_BRACE_CLOSE

    TK_BRACE_CLOSE  shift, and go to state 153


state 123

  102 oneRef: TK_BRACKET_OPEN expr . TK_BRACKET_CLOSE

    TK_BRACKET_CLOSE  shift, and go to state 154


state 124

   96 varRefCont: varRefCont TK_OP_DOT . varRefContID
   98 varRefContID: . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 120

    varRefContID  go to state 155


state 125

   99 collectionRefs: collectionRefs oneRef .

    $default  reduce using rule 99 (collectionRefs)


state 126

   20 whileStmt: TK_WHILE . expr stmtList
   21 doWhileStmt: TK_DO stmtList TK_WHILE . expr
   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 156
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 127

   31 ifStmt: TK_IF condClause elseClauses . TK_END

    TK_END  shift, and go to state 157


state 128

   32 elseClauses: elsifClause . TK_ELSE stmtList
   33            | elsifClause .  [TK_END]
   34 elsifClause: elsifClause . TK_ELSIF condClause

    TK_ELSIF  shift, and go to state 158
    TK_ELSE   shift, and go to state 159

    $default  reduce using rule 33 (elseClauses)


state 129

    3 stmtList: stmtList . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   36 condClause: expr stmtList .  [TK_END, TK_ELSIF, TK_ELSE]
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    $default  reduce using rule 36 (condClause)

    stmt                         go to state 80
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 130

    3 stmtList: . stmtList stmt
    4         | . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   18        | TK_FOR TK_IDENTIFIER expr . stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    stmtList                     go to state 160
    stmt                         go to state 17
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 131

    3 stmtList: . stmtList stmt
    4         | . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   19        | TK_FOR multiValueLeftHandSide expr . stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    stmtList                     go to state 161
    stmt                         go to state 17
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 132

    3 stmtList: stmtList . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   20          | TK_WHILE expr stmtList .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_DO, TK_IF, TK_FOR, TK_WHILE]
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_BRACKET_OPEN  shift, and go to state 15

    $default  reduce using rule 20 (whileStmt)

    stmt                         go to state 80
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34

    Conflict between rule 20 and token TK_INCLUDE resolved as reduce (%left TK_INCLUDE).
    Conflict between rule 20 and token TK_SUB resolved as reduce (%left TK_SUB).
    Conflict between rule 20 and token TK_IDENTIFIER resolved as reduce (%left TK_IDENTIFIER).
    Conflict between rule 20 and token TK_NEXT resolved as reduce (%left TK_NEXT).
    Conflict between rule 20 and token TK_BREAK resolved as reduce (%left TK_BREAK).
    Conflict between rule 20 and token TK_YIELD resolved as reduce (%left TK_YIELD).
    Conflict between rule 20 and token TK_RETURN resolved as reduce (%left TK_RETURN).
    Conflict between rule 20 and token TK_DO resolved as reduce (%left TK_DO).
    Conflict between rule 20 and token TK_IF resolved as reduce (%left TK_IF).
    Conflict between rule 20 and token TK_FOR resolved as reduce (%left TK_FOR).
    Conflict between rule 20 and token TK_WHILE resolved as reduce (%left TK_WHILE).
    Conflict between rule 20 and token TK_BRACKET_OPEN resolved as shift (TK_WHILE < TK_BRACKET_OPEN).


state 133

   27 multiValueLeftHandSideList: multiValueLeftHandSideList TK_COMMA . multiValueLeftHandSideClause
   29 multiValueLeftHandSideClause: . varRef
   30                             | . TK_UNDERSCORE
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 6
    TK_UNDERSCORE  shift, and go to state 76

    multiValueLeftHandSideClause  go to state 162
    varRef                        go to state 79


state 134

   26 multiValueLeftHandSide: TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE .

    $default  reduce using rule 26 (multiValueLeftHandSide)


state 135

   23 referenceCopyAssignmentStmt: assignmentLeftHandSide TK_ASSIGN_REF expr .

    $default  reduce using rule 23 (referenceCopyAssignmentStmt)


state 136

   22 valueDeepCopyAssignStmt: assignmentLeftHandSide TK_ASSIGN expr .

    $default  reduce using rule 22 (valueDeepCopyAssignStmt)


state 137

   38 functionDefStmt: functionPrototypeDecl stmtList TK_END .

    $default  reduce using rule 38 (functionDefStmt)


state 138

  105 functionArgList: expr .

    $default  reduce using rule 105 (functionArgList)


state 139

  103 functionCallStmt: varRef TK_PARENTHESES_OPEN functionArgList . TK_PARENTHESES_CLOSE
  104 functionArgList: functionArgList . TK_COMMA expr

    TK_COMMA              shift, and go to state 163
    TK_PARENTHESES_CLOSE  shift, and go to state 164


state 140

   41 funcParamDecls: funcParamDecls TK_COMMA . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 165


state 141

    3 stmtList: stmtList . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   52 anonymousFunction: TK_SUB funcParamDecls stmtList . TK_END
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_END           shift, and go to state 166
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    stmt                         go to state 80
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 142

   91 primaryExp: TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE .

    $default  reduce using rule 91 (primaryExp)


state 143

   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE
  115 hashClause: expr TK_HASH_IT . expr

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 167
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 144

   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE
  112 hashClauseList: hashClauseList TK_COMMA . hashClause
  115 hashClause: . expr TK_HASH_IT expr

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 88
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58
    hashClause         go to state 168


state 145

  111 hashConstructor: TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE .

    $default  reduce using rule 111 (hashConstructor)


state 146

   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  108 expressionList: expressionList TK_COMMA . expr
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 169
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 147

  107 listConstructor: TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE .

    $default  reduce using rule 107 (listConstructor)


state 148

   53 logicalExp: logicalExp logExpOp compExp .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_DO, TK_IF, TK_FOR, TK_WHILE, TK_OP_LOGICAL_AND, TK_OP_LOGICAL_OR, TK_HASH_IT, TK_COMMA, TK_PARENTHESES_CLOSE, TK_BRACE_CLOSE, TK_BRACKET_CLOSE, TK_BRACKET_OPEN]
   57 compExp: compExp . compExpOp addExp
   59 compExpOp: . TK_OP_NUM_EQ
   60          | . TK_OP_NUM_NE
   61          | . TK_OP_NUM_LT
   62          | . TK_OP_NUM_GT
   63          | . TK_OP_NUM_LE
   64          | . TK_OP_NUM_GE
   65          | . TK_OP_STR_EQ
   66          | . TK_OP_STR_NE
   67          | . TK_OP_STR_LT
   68          | . TK_OP_STR_GT
   69          | . TK_OP_STR_LE
   70          | . TK_OP_STR_GE

    TK_OP_NUM_EQ  shift, and go to state 96
    TK_OP_NUM_NE  shift, and go to state 97
    TK_OP_NUM_LT  shift, and go to state 98
    TK_OP_NUM_GT  shift, and go to state 99
    TK_OP_NUM_LE  shift, and go to state 100
    TK_OP_NUM_GE  shift, and go to state 101
    TK_OP_STR_EQ  shift, and go to state 102
    TK_OP_STR_NE  shift, and go to state 103
    TK_OP_STR_LT  shift, and go to state 104
    TK_OP_STR_GT  shift, and go to state 105
    TK_OP_STR_LE  shift, and go to state 106
    TK_OP_STR_GE  shift, and go to state 107

    $default  reduce using rule 53 (logicalExp)

    compExpOp  go to state 108


state 149

   57 compExp: compExp compExpOp addExp .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_DO, TK_IF, TK_FOR, TK_WHILE, TK_OP_LOGICAL_AND, TK_OP_LOGICAL_OR, TK_OP_NUM_EQ, TK_OP_NUM_NE, TK_OP_NUM_LT, TK_OP_NUM_GT, TK_OP_NUM_LE, TK_OP_NUM_GE, TK_OP_STR_EQ, TK_OP_STR_NE, TK_OP_STR_LT, TK_OP_STR_GT, TK_OP_STR_LE, TK_OP_STR_GE, TK_HASH_IT, TK_COMMA, TK_PARENTHESES_CLOSE, TK_BRACE_CLOSE, TK_BRACKET_CLOSE, TK_BRACKET_OPEN]
   71 addExp: addExp . addExpOp multExp
   73 addExpOp: . TK_OP_NUM_SUBST
   74         | . TK_OP_STR_CAT
   75         | . TK_OP_NUM_ADD

    TK_OP_STR_CAT    shift, and go to state 109
    TK_OP_NUM_ADD    shift, and go to state 110
    TK_OP_NUM_SUBST  shift, and go to state 111

    $default  reduce using rule 57 (compExp)

    addExpOp  go to state 112


state 150

   71 addExp: addExp addExpOp multExp .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_DO, TK_IF, TK_FOR, TK_WHILE, TK_OP_LOGICAL_AND, TK_OP_LOGICAL_OR, TK_OP_NUM_EQ, TK_OP_NUM_NE, TK_OP_NUM_LT, TK_OP_NUM_GT, TK_OP_NUM_LE, TK_OP_NUM_GE, TK_OP_STR_EQ, TK_OP_STR_NE, TK_OP_STR_LT, TK_OP_STR_GT, TK_OP_STR_LE, TK_OP_STR_GE, TK_OP_STR_CAT, TK_HASH_IT, TK_OP_NUM_ADD, TK_OP_NUM_SUBST, TK_COMMA, TK_PARENTHESES_CLOSE, TK_BRACE_CLOSE, TK_BRACKET_CLOSE, TK_BRACKET_OPEN]
   76 multExp: multExp . multExpOp unaryExp
   78 multExpOp: . TK_OP_NUM_DIV
   79          | . TK_OP_NUM_MULT
   80          | . TK_OP_NUM_MOD

    TK_OP_NUM_DIV   shift, and go to state 113
    TK_OP_NUM_MULT  shift, and go to state 114
    TK_OP_NUM_MOD   shift, and go to state 115

    $default  reduce using rule 71 (addExp)

    multExpOp  go to state 116


state 151

   76 multExp: multExp multExpOp unaryExp .

    $default  reduce using rule 76 (multExp)


state 152

   39 functionPrototypeDecl: TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls . TK_PARENTHESES_CLOSE
   41 funcParamDecls: funcParamDecls . TK_COMMA TK_IDENTIFIER

    TK_COMMA              shift, and go to state 140
    TK_PARENTHESES_CLOSE  shift, and go to state 170


state 153

  101 oneRef: TK_BRACE_OPEN expr TK_BRACE_CLOSE .

    $default  reduce using rule 101 (oneRef)


state 154

  102 oneRef: TK_BRACKET_OPEN expr TK_BRACKET_CLOSE .

    $default  reduce using rule 102 (oneRef)


state 155

   96 varRefCont: varRefCont TK_OP_DOT varRefContID .

    $default  reduce using rule 96 (varRefCont)


state 156

    3 stmtList: . stmtList stmt
    4         | . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   20          | TK_WHILE expr . stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   21            | TK_DO stmtList TK_WHILE expr .  [$end, TK_INCLUDE, TK_SUB, TK_IDENTIFIER, TK_NEXT, TK_BREAK, TK_YIELD, TK_RETURN, TK_END, TK_ELSIF, TK_ELSE, TK_DO, TK_IF, TK_FOR, TK_WHILE]
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_BRACKET_OPEN  shift, and go to state 15

    $default  reduce using rule 21 (doWhileStmt)

    stmtList                     go to state 132
    stmt                         go to state 17
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34

    Conflict between rule 21 and token TK_INCLUDE resolved as reduce (%left TK_INCLUDE).
    Conflict between rule 21 and token TK_SUB resolved as reduce (%left TK_SUB).
    Conflict between rule 21 and token TK_IDENTIFIER resolved as reduce (%left TK_IDENTIFIER).
    Conflict between rule 21 and token TK_NEXT resolved as reduce (%left TK_NEXT).
    Conflict between rule 21 and token TK_BREAK resolved as reduce (%left TK_BREAK).
    Conflict between rule 21 and token TK_YIELD resolved as reduce (%left TK_YIELD).
    Conflict between rule 21 and token TK_RETURN resolved as reduce (%left TK_RETURN).
    Conflict between rule 21 and token TK_DO resolved as reduce (%left TK_DO).
    Conflict between rule 21 and token TK_IF resolved as reduce (%left TK_IF).
    Conflict between rule 21 and token TK_FOR resolved as reduce (%left TK_FOR).
    Conflict between rule 21 and token TK_WHILE resolved as reduce (%left TK_WHILE).
    Conflict between rule 21 and token TK_BRACKET_OPEN resolved as shift (TK_WHILE < TK_BRACKET_OPEN).


state 157

   31 ifStmt: TK_IF condClause elseClauses TK_END .

    $default  reduce using rule 31 (ifStmt)


state 158

   34 elsifClause: elsifClause TK_ELSIF . condClause
   36 condClause: . expr stmtList
   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    condClause         go to state 171
    expr               go to state 72
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 159

    3 stmtList: . stmtList stmt
    4         | . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   32 elseClauses: elsifClause TK_ELSE . stmtList
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    stmtList                     go to state 172
    stmt                         go to state 17
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 160

    3 stmtList: stmtList . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   18        | TK_FOR TK_IDENTIFIER expr stmtList . TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_END           shift, and go to state 173
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    stmt                         go to state 80
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 161

    3 stmtList: stmtList . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   19        | TK_FOR multiValueLeftHandSide expr stmtList . TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_END           shift, and go to state 174
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    stmt                         go to state 80
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 162

   27 multiValueLeftHandSideList: multiValueLeftHandSideList TK_COMMA multiValueLeftHandSideClause .

    $default  reduce using rule 27 (multiValueLeftHandSideList)


state 163

   48 expr: . logicalExp
   49     | . hashConstructor
   50     | . listConstructor
   51     | . anonymousFunction
   52 anonymousFunction: . TK_SUB funcParamDecls stmtList TK_END
   53 logicalExp: . logicalExp logExpOp compExp
   54           | . compExp
   57 compExp: . compExp compExpOp addExp
   58        | . addExp
   71 addExp: . addExp addExpOp multExp
   72       | . multExp
   76 multExp: . multExp multExpOp unaryExp
   77        | . unaryExp
   81 unaryExp: . unaryExpOpPrefix primaryExp
   82         | . primaryExp
   83 unaryExpOpPrefix: . TK_OP_NUM_ADD
   84                 | . TK_OP_NUM_SUBST
   85                 | . TK_OP_LOGICAL_NEGATE
   86 primaryExp: . varRef
   87           | . TK_INTEGER_CONSTANT
   88           | . TK_DOUBLE_CONSTANT
   89           | . TK_MULTI_PART_STRING_CONSTANT
   90           | . TK_STRING_CONSTANT
   91           | . TK_PARENTHESES_OPEN expr TK_PARENTHESES_CLOSE
   92           | . functionCallStmt
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE
  104 functionArgList: functionArgList TK_COMMA . expr
  107 listConstructor: . TK_BRACKET_OPEN expressionList TK_BRACKET_CLOSE
  111 hashConstructor: . TK_BRACE_OPEN hashClauseList TK_BRACE_CLOSE

    TK_SUB                         shift, and go to state 35
    TK_DOUBLE_CONSTANT             shift, and go to state 36
    TK_MULTI_PART_STRING_CONSTANT  shift, and go to state 37
    TK_STRING_CONSTANT             shift, and go to state 38
    TK_INTEGER_CONSTANT            shift, and go to state 39
    TK_IDENTIFIER                  shift, and go to state 6
    TK_OP_NUM_ADD                  shift, and go to state 40
    TK_OP_NUM_SUBST                shift, and go to state 41
    TK_OP_LOGICAL_NEGATE           shift, and go to state 42
    TK_PARENTHESES_OPEN            shift, and go to state 43
    TK_BRACE_OPEN                  shift, and go to state 44
    TK_BRACKET_OPEN                shift, and go to state 45

    expr               go to state 175
    anonymousFunction  go to state 47
    logicalExp         go to state 48
    compExp            go to state 49
    addExp             go to state 50
    multExp            go to state 51
    unaryExp           go to state 52
    unaryExpOpPrefix   go to state 53
    primaryExp         go to state 54
    varRef             go to state 55
    functionCallStmt   go to state 56
    listConstructor    go to state 57
    hashConstructor    go to state 58


state 164

  103 functionCallStmt: varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE .

    $default  reduce using rule 103 (functionCallStmt)


state 165

   41 funcParamDecls: funcParamDecls TK_COMMA TK_IDENTIFIER .

    $default  reduce using rule 41 (funcParamDecls)


state 166

   52 anonymousFunction: TK_SUB funcParamDecls stmtList TK_END .

    $default  reduce using rule 52 (anonymousFunction)


state 167

  115 hashClause: expr TK_HASH_IT expr .

    $default  reduce using rule 115 (hashClause)


state 168

  112 hashClauseList: hashClauseList TK_COMMA hashClause .

    $default  reduce using rule 112 (hashClauseList)


state 169

  108 expressionList: expressionList TK_COMMA expr .

    $default  reduce using rule 108 (expressionList)


state 170

   39 functionPrototypeDecl: TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE .

    $default  reduce using rule 39 (functionPrototypeDecl)


state 171

   34 elsifClause: elsifClause TK_ELSIF condClause .

    $default  reduce using rule 34 (elsifClause)


state 172

    3 stmtList: stmtList . stmt
    5 stmt: . valueDeepCopyAssignStmt
    6     | . referenceCopyAssignmentStmt
    7     | . includeStmt
    8     | . functionCallStmt
    9     | . functionDefStmt
   10     | . ifStmt
   11     | . forStmt
   12     | . whileStmt
   13     | . doWhileStmt
   14     | . returnStmt
   15     | . yieldStmt
   16     | . breakStmt
   17     | . nextStmt
   18 forStmt: . TK_FOR TK_IDENTIFIER expr stmtList TK_END
   19        | . TK_FOR multiValueLeftHandSide expr stmtList TK_END
   20 whileStmt: . TK_WHILE expr stmtList
   21 doWhileStmt: . TK_DO stmtList TK_WHILE expr
   22 valueDeepCopyAssignStmt: . assignmentLeftHandSide TK_ASSIGN expr
   23 referenceCopyAssignmentStmt: . assignmentLeftHandSide TK_ASSIGN_REF expr
   24 assignmentLeftHandSide: . varRef
   25                       | . multiValueLeftHandSide
   26 multiValueLeftHandSide: . TK_BRACKET_OPEN multiValueLeftHandSideList TK_BRACKET_CLOSE
   31 ifStmt: . TK_IF condClause elseClauses TK_END
   32 elseClauses: elsifClause TK_ELSE stmtList .  [TK_END]
   37 includeStmt: . TK_INCLUDE TK_STRING_CONSTANT
   38 functionDefStmt: . functionPrototypeDecl stmtList TK_END
   39 functionPrototypeDecl: . TK_SUB TK_IDENTIFIER TK_PARENTHESES_OPEN funcParamDecls TK_PARENTHESES_CLOSE
   40                      | . TK_SUB TK_IDENTIFIER funcParamDecls
   43 breakStmt: . TK_BREAK
   44 nextStmt: . TK_NEXT
   45 returnStmt: . TK_RETURN expr
   46           | . TK_RETURN
   47 yieldStmt: . TK_YIELD expr
   93 varRef: . TK_IDENTIFIER collectionRefs
   94       | . TK_IDENTIFIER varRefCont
   95       | . TK_IDENTIFIER
  103 functionCallStmt: . varRef TK_PARENTHESES_OPEN functionArgList TK_PARENTHESES_CLOSE

    TK_INCLUDE       shift, and go to state 4
    TK_SUB           shift, and go to state 5
    TK_IDENTIFIER    shift, and go to state 6
    TK_NEXT          shift, and go to state 7
    TK_BREAK         shift, and go to state 8
    TK_YIELD         shift, and go to state 9
    TK_RETURN        shift, and go to state 10
    TK_DO            shift, and go to state 11
    TK_IF            shift, and go to state 12
    TK_FOR           shift, and go to state 13
    TK_WHILE         shift, and go to state 14
    TK_BRACKET_OPEN  shift, and go to state 15

    $default  reduce using rule 32 (elseClauses)

    stmt                         go to state 80
    forStmt                      go to state 18
    whileStmt                    go to state 19
    doWhileStmt                  go to state 20
    valueDeepCopyAssignStmt      go to state 21
    referenceCopyAssignmentStmt  go to state 22
    assignmentLeftHandSide       go to state 23
    multiValueLeftHandSide       go to state 24
    ifStmt                       go to state 25
    includeStmt                  go to state 26
    functionDefStmt              go to state 27
    functionPrototypeDecl        go to state 28
    breakStmt                    go to state 29
    nextStmt                     go to state 30
    returnStmt                   go to state 31
    yieldStmt                    go to state 32
    varRef                       go to state 33
    functionCallStmt             go to state 34


state 173

   18 forStmt: TK_FOR TK_IDENTIFIER expr stmtList TK_END .

    $default  reduce using rule 18 (forStmt)


state 174

   19 forStmt: TK_FOR multiValueLeftHandSide expr stmtList TK_END .

    $default  reduce using rule 19 (forStmt)


state 175

  104 functionArgList: functionArgList TK_COMMA expr .

    $default  reduce using rule 104 (functionArgList)
