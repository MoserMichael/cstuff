
****
* Target:    parser
* Type:      Executable
* Host:      os: GNU-Linux os-version: 2.6.38-8-generic architecture: i686
* Directory: /home/mmoser/archive/cstuff_bak/script-lan
****
./test-it.pl test  ../GNU-Linux-2.6.38-8-generic-i686/bin/parser lexer.c ast.c parsectx.c parser.c main.c 

==================
Running tests
  - Using: ../GNU-Linux-2.6.38-8-generic-i686/bin/parser
  - Tests: test/01-assignment.p test/02-if.p test/03-func-fact.p 
==================

Testing test/01-assignment.p ... 
---Test: test/01-assignment.p (status: 0)---
---scanning file test/01-assignment.p
Starting parse
Entering state 0
Reading a token: Next token is token TK_START_STATEMENT (: )
Shifting token TK_START_STATEMENT (: )
Entering state 1
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_ASSIGN (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1
Entering state 30
Next token is token TK_ASSIGN (: )
Shifting token TK_ASSIGN (: )
Entering state 73
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 30 73
Entering state 50
Reading a token: Next token is token TK_OP_NUM_ADD (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 30 73
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 30 73
Entering state 47
Next token is token TK_OP_NUM_ADD (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 30 73
Entering state 46
Next token is token TK_OP_NUM_ADD (: )
Shifting token TK_OP_NUM_ADD (: )
Entering state 96
Reducing stack by rule 63 (line 376):
   $1 = token TK_OP_NUM_ADD (: )
-> $$ = nterm addExpOp (: )
Stack now 0 1 30 73 46
Entering state 98
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 30 73 46 98
Entering state 50
Reading a token: Next token is token TK_OP_NUM_MULT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 30 73 46 98
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 30 73 46 98
Entering state 132
Next token is token TK_OP_NUM_MULT (: )
Shifting token TK_OP_NUM_MULT (: )
Entering state 100
Reducing stack by rule 67 (line 390):
   $1 = token TK_OP_NUM_MULT (: )
-> $$ = nterm multExpOp (: )
Stack now 0 1 30 73 46 98 132
Entering state 102
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 30 73 46 98 132 102
Entering state 50
Reading a token: Next token is token TK_OP_NUM_DIV (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 30 73 46 98 132 102
Entering state 133
Reducing stack by rule 64 (line 379):
   $1 = nterm multExp (: )
   $2 = nterm multExpOp (: )
   $3 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 30 73 46 98
Entering state 132
Next token is token TK_OP_NUM_DIV (: )
Shifting token TK_OP_NUM_DIV (: )
Entering state 99
Reducing stack by rule 66 (line 389):
   $1 = token TK_OP_NUM_DIV (: )
-> $$ = nterm multExpOp (: )
Stack now 0 1 30 73 46 98 132
Entering state 102
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 30 73 46 98 132 102
Entering state 50
Reading a token: Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 30 73 46 98 132 102
Entering state 133
Reducing stack by rule 64 (line 379):
   $1 = nterm multExp (: )
   $2 = nterm multExpOp (: )
   $3 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 30 73 46 98
Entering state 132
Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 59 (line 364):
   $1 = nterm addExp (: )
   $2 = nterm addExpOp (: )
   $3 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 30 73
Entering state 46
Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 30 73
Entering state 45
Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 30 73
Entering state 122
Reducing stack by rule 21 (line 129):
   $1 = nterm varRef (: )
   $2 = token TK_ASSIGN (: )
   $3 = nterm expr (: )
-> $$ = nterm valueDeepCopyAssignStmt (: )
Stack now 0 1
Entering state 20
Reducing stack by rule 5 (line 80):
   $1 = nterm valueDeepCopyAssignStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 15 6 58
Entering state 51
Reducing stack by rule 77 (line 421):
   $1 = nterm varRef (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 6 58
Entering state 50
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 6 58
Entering state 47
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 15 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 15
Entering state 31
Reducing stack by rule 8 (line 83):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 15
Entering state 70
Reducing stack by rule 3 (line 62):
   $1 = nterm stmtList (: )
   $2 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_ASSIGN (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 15
Entering state 30
Next token is token TK_ASSIGN (: )
Shifting token TK_ASSIGN (: )
Entering state 73
Reading a token: Next token is token TK_BRACKET_OPEN (: )
Shifting token TK_BRACKET_OPEN (: )
Entering state 42
Reading a token: Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 97 (line 600):
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 42
Entering state 81
Next token is token TK_BRACKET_CLOSE (: )
Shifting token TK_BRACKET_CLOSE (: )
Entering state 130
Reducing stack by rule 94 (line 570):
   $1 = token TK_BRACKET_OPEN (: )
   $2 = nterm expressionList (: )
   $3 = token TK_BRACKET_CLOSE (: )
-> $$ = nterm listConstructor (: )
Stack now 0 1 15 30 73
Entering state 53
Reducing stack by rule 42 (line 317):
   $1 = nterm listConstructor (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73
Entering state 122
Reducing stack by rule 21 (line 129):
   $1 = nterm varRef (: )
   $2 = token TK_ASSIGN (: )
   $3 = nterm expr (: )
-> $$ = nterm valueDeepCopyAssignStmt (: )
Stack now 0 1 15
Entering state 20
Reducing stack by rule 5 (line 80):
   $1 = nterm valueDeepCopyAssignStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 15
Entering state 70
Reducing stack by rule 3 (line 62):
   $1 = nterm stmtList (: )
   $2 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_ASSIGN (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 15
Entering state 30
Next token is token TK_ASSIGN (: )
Shifting token TK_ASSIGN (: )
Entering state 73
Reading a token: Next token is token TK_BRACE_OPEN (: )
Shifting token TK_BRACE_OPEN (: )
Entering state 41
Reading a token: Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 101 (line 645):
-> $$ = nterm hashClauseList (: )
Stack now 0 1 15 30 73 41
Entering state 78
Next token is token TK_BRACE_CLOSE (: )
Shifting token TK_BRACE_CLOSE (: )
Entering state 128
Reducing stack by rule 98 (line 609):
   $1 = token TK_BRACE_OPEN (: )
   $2 = nterm hashClauseList (: )
   $3 = token TK_BRACE_CLOSE (: )
-> $$ = nterm hashConstructor (: )
Stack now 0 1 15 30 73
Entering state 54
Reducing stack by rule 41 (line 316):
   $1 = nterm hashConstructor (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73
Entering state 122
Reducing stack by rule 21 (line 129):
   $1 = nterm varRef (: )
   $2 = token TK_ASSIGN (: )
   $3 = nterm expr (: )
-> $$ = nterm valueDeepCopyAssignStmt (: )
Stack now 0 1 15
Entering state 20
Reducing stack by rule 5 (line 80):
   $1 = nterm valueDeepCopyAssignStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 15
Entering state 70
Reducing stack by rule 3 (line 62):
   $1 = nterm stmtList (: )
   $2 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_ASSIGN (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 15
Entering state 30
Next token is token TK_ASSIGN (: )
Shifting token TK_ASSIGN (: )
Entering state 73
Reading a token: Next token is token TK_BRACE_OPEN (: )
Shifting token TK_BRACE_OPEN (: )
Entering state 41
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41
Entering state 50
Reading a token: Next token is token TK_HASH_IT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41
Entering state 47
Next token is token TK_HASH_IT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41
Entering state 46
Next token is token TK_HASH_IT (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41
Entering state 45
Next token is token TK_HASH_IT (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41
Entering state 77
Next token is token TK_HASH_IT (: )
Shifting token TK_HASH_IT (: )
Entering state 126
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 77 126
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 77 126
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 77 126
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 77 126
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 77 126
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 77 126
Entering state 146
Reducing stack by rule 102 (line 656):
   $1 = nterm expr (: )
   $2 = token TK_HASH_IT (: )
   $3 = nterm expr (: )
-> $$ = nterm hashClause (: )
Stack now 0 1 15 30 73 41
Entering state 79
Reducing stack by rule 100 (line 634):
   $1 = nterm hashClause (: )
-> $$ = nterm hashClauseList (: )
Stack now 0 1 15 30 73 41
Entering state 78
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 127
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 50
Reading a token: Next token is token TK_HASH_IT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 47
Next token is token TK_HASH_IT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 46
Next token is token TK_HASH_IT (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 45
Next token is token TK_HASH_IT (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 77
Next token is token TK_HASH_IT (: )
Shifting token TK_HASH_IT (: )
Entering state 126
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 146
Reducing stack by rule 102 (line 656):
   $1 = nterm expr (: )
   $2 = token TK_HASH_IT (: )
   $3 = nterm expr (: )
-> $$ = nterm hashClause (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 147
Reducing stack by rule 99 (line 623):
   $1 = nterm hashClauseList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm hashClause (: )
-> $$ = nterm hashClauseList (: )
Stack now 0 1 15 30 73 41
Entering state 78
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 127
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 50
Reading a token: Next token is token TK_HASH_IT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 47
Next token is token TK_HASH_IT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 46
Next token is token TK_HASH_IT (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 45
Next token is token TK_HASH_IT (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 77
Next token is token TK_HASH_IT (: )
Shifting token TK_HASH_IT (: )
Entering state 126
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 146
Reducing stack by rule 102 (line 656):
   $1 = nterm expr (: )
   $2 = token TK_HASH_IT (: )
   $3 = nterm expr (: )
-> $$ = nterm hashClause (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 147
Reducing stack by rule 99 (line 623):
   $1 = nterm hashClauseList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm hashClause (: )
-> $$ = nterm hashClauseList (: )
Stack now 0 1 15 30 73 41
Entering state 78
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 127
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 50
Reading a token: Next token is token TK_HASH_IT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 47
Next token is token TK_HASH_IT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 46
Next token is token TK_HASH_IT (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 45
Next token is token TK_HASH_IT (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 77
Next token is token TK_HASH_IT (: )
Shifting token TK_HASH_IT (: )
Entering state 126
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 146
Reducing stack by rule 102 (line 656):
   $1 = nterm expr (: )
   $2 = token TK_HASH_IT (: )
   $3 = nterm expr (: )
-> $$ = nterm hashClause (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 147
Reducing stack by rule 99 (line 623):
   $1 = nterm hashClauseList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm hashClause (: )
-> $$ = nterm hashClauseList (: )
Stack now 0 1 15 30 73 41
Entering state 78
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 127
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 50
Reading a token: Next token is token TK_HASH_IT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 47
Next token is token TK_HASH_IT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 46
Next token is token TK_HASH_IT (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 45
Next token is token TK_HASH_IT (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 77
Next token is token TK_HASH_IT (: )
Shifting token TK_HASH_IT (: )
Entering state 126
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 50
Reading a token: Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 47
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 46
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 45
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 146
Reducing stack by rule 102 (line 656):
   $1 = nterm expr (: )
   $2 = token TK_HASH_IT (: )
   $3 = nterm expr (: )
-> $$ = nterm hashClause (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 147
Reducing stack by rule 99 (line 623):
   $1 = nterm hashClauseList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm hashClause (: )
-> $$ = nterm hashClauseList (: )
Stack now 0 1 15 30 73 41
Entering state 78
Next token is token TK_BRACE_CLOSE (: )
Shifting token TK_BRACE_CLOSE (: )
Entering state 128
Reducing stack by rule 98 (line 609):
   $1 = token TK_BRACE_OPEN (: )
   $2 = nterm hashClauseList (: )
   $3 = token TK_BRACE_CLOSE (: )
-> $$ = nterm hashConstructor (: )
Stack now 0 1 15 30 73
Entering state 54
Reducing stack by rule 41 (line 316):
   $1 = nterm hashConstructor (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73
Entering state 122
Reducing stack by rule 21 (line 129):
   $1 = nterm varRef (: )
   $2 = token TK_ASSIGN (: )
   $3 = nterm expr (: )
-> $$ = nterm valueDeepCopyAssignStmt (: )
Stack now 0 1 15
Entering state 20
Reducing stack by rule 5 (line 80):
   $1 = nterm valueDeepCopyAssignStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 15
Entering state 70
Reducing stack by rule 3 (line 62):
   $1 = nterm stmtList (: )
   $2 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
---scanning string  c{ @"@4" } | init token 315
Starting parse
Entering state 0
Reading a token: Next token is token TK_START_STATEMENT (: )
Shifting token TK_START_STATEMENT (: )
Entering state 1
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_BRACE_OPEN (: )
Shifting token TK_BRACE_OPEN (: )
Entering state 59
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 6 59
Entering state 50
Reading a token: Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 6 59
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 6 59
Entering state 47
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 6 59
Entering state 46
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 6 59
Entering state 45
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 6 59
Entering state 111
Next token is token TK_BRACE_CLOSE (: )
Shifting token TK_BRACE_CLOSE (: )
Entering state 137
Reducing stack by rule 88 (line 505):
   $1 = token TK_BRACE_OPEN (: )
   $2 = nterm expr (: )
   $3 = token TK_BRACE_CLOSE (: )
-> $$ = nterm oneRef (: )
Stack now 0 1 6
Entering state 62
Reducing stack by rule 87 (line 494):
   $1 = nterm oneRef (: )
-> $$ = nterm collectionRefs (: )
Stack now 0 1 6
Entering state 61
Reading a token: Now at end of input.
Reducing stack by rule 84 (line 466):
   $1 = token TK_IDENTIFIER (: )
   $2 = nterm collectionRefs (: )
-> $$ = nterm varRef (: )
Stack now 0 1
Entering state 30
Now at end of input.
Error: popping nterm varRef (: )
Stack now 0 1
Error: popping token TK_START_STATEMENT (: )
Stack now 0
Cleanup: discarding lookahead token $end (: )
Stack now 0
---yyparer failed; returns 1
---scanning string  c{ @"@4" } | init token 316
Starting parse
Entering state 0
Reading a token: Next token is token TK_START_EXPRESSION (: )
Shifting token TK_START_EXPRESSION (: )
Entering state 2
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_BRACE_OPEN (: )
Shifting token TK_BRACE_OPEN (: )
Entering state 59
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 2 6 59
Entering state 50
Reading a token: Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 2 6 59
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 2 6 59
Entering state 47
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 2 6 59
Entering state 46
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 2 6 59
Entering state 45
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 2 6 59
Entering state 111
Next token is token TK_BRACE_CLOSE (: )
Shifting token TK_BRACE_CLOSE (: )
Entering state 137
Reducing stack by rule 88 (line 505):
   $1 = token TK_BRACE_OPEN (: )
   $2 = nterm expr (: )
   $3 = token TK_BRACE_CLOSE (: )
-> $$ = nterm oneRef (: )
Stack now 0 2 6
Entering state 62
Reducing stack by rule 87 (line 494):
   $1 = nterm oneRef (: )
-> $$ = nterm collectionRefs (: )
Stack now 0 2 6
Entering state 61
Reading a token: Now at end of input.
Reducing stack by rule 84 (line 466):
   $1 = token TK_IDENTIFIER (: )
   $2 = nterm collectionRefs (: )
-> $$ = nterm varRef (: )
Stack now 0 2
Entering state 51
Reducing stack by rule 77 (line 421):
   $1 = nterm varRef (: )
-> $$ = nterm primaryExp (: )
Stack now 0 2
Entering state 50
Now at end of input.
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 2
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 2
Entering state 47
Now at end of input.
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 2
Entering state 46
Now at end of input.
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 2
Entering state 45
Now at end of input.
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 2
Entering state 43
Reducing stack by rule 2 (line 56):
   $1 = token TK_START_EXPRESSION (: )
   $2 = nterm expr (: )
-> $$ = nterm prog (: )
Stack now 0
Entering state 3
Now at end of input.
Shifting token $end (: )
Entering state 55
Stack now 0 3 55
Cleanup: popping token $end (: )
Cleanup: popping nterm prog (: )
---yyparse ok
---scanning string  c{ @"@4" } | init token 315
Starting parse
Entering state 0
Reading a token: Next token is token TK_START_STATEMENT (: )
Shifting token TK_START_STATEMENT (: )
Entering state 1
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_BRACE_OPEN (: )
Shifting token TK_BRACE_OPEN (: )
Entering state 59
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 6 59
Entering state 50
Reading a token: Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 6 59
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 6 59
Entering state 47
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 6 59
Entering state 46
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 6 59
Entering state 45
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 6 59
Entering state 111
Next token is token TK_BRACE_CLOSE (: )
Shifting token TK_BRACE_CLOSE (: )
Entering state 137
Reducing stack by rule 88 (line 505):
   $1 = token TK_BRACE_OPEN (: )
   $2 = nterm expr (: )
   $3 = token TK_BRACE_CLOSE (: )
-> $$ = nterm oneRef (: )
Stack now 0 1 6
Entering state 62
Reducing stack by rule 87 (line 494):
   $1 = nterm oneRef (: )
-> $$ = nterm collectionRefs (: )
Stack now 0 1 6
Entering state 61
Reading a token: Now at end of input.
Reducing stack by rule 84 (line 466):
   $1 = token TK_IDENTIFIER (: )
   $2 = nterm collectionRefs (: )
-> $$ = nterm varRef (: )
Stack now 0 1
Entering state 30
Now at end of input.

test/01-assignment.p(1): Error: syntax error, unexpected $end, expecting assign ref or assign  
      1 |:....+....:....+....:....+....:....+....:....+....:....+....:....+....:....+....

        |....^
Error: popping nterm varRef (: )
Stack now 0 1
Error: popping token TK_START_STATEMENT (: )
Stack now 0
Cleanup: discarding lookahead token $end (: )
Stack now 0
---yyparer failed; returns 1
---scanning string  c{ @"@4" } | init token 316
Starting parse
Entering state 0
Reading a token: Next token is token TK_START_EXPRESSION (: )
Shifting token TK_START_EXPRESSION (: )
Entering state 2
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_BRACE_OPEN (: )
Shifting token TK_BRACE_OPEN (: )
Entering state 59
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 2 6 59
Entering state 50
Reading a token: Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 2 6 59
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 2 6 59
Entering state 47
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 2 6 59
Entering state 46
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 2 6 59
Entering state 45
Next token is token TK_BRACE_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 2 6 59
Entering state 111
Next token is token TK_BRACE_CLOSE (: )
Shifting token TK_BRACE_CLOSE (: )
Entering state 137
Reducing stack by rule 88 (line 505):
   $1 = token TK_BRACE_OPEN (: )
   $2 = nterm expr (: )
   $3 = token TK_BRACE_CLOSE (: )
-> $$ = nterm oneRef (: )
Stack now 0 2 6
Entering state 62
Reducing stack by rule 87 (line 494):
   $1 = nterm oneRef (: )
-> $$ = nterm collectionRefs (: )
Stack now 0 2 6
Entering state 61
Reading a token: Now at end of input.
Reducing stack by rule 84 (line 466):
   $1 = token TK_IDENTIFIER (: )
   $2 = nterm collectionRefs (: )
-> $$ = nterm varRef (: )
Stack now 0 2
Entering state 51
Reducing stack by rule 77 (line 421):
   $1 = nterm varRef (: )
-> $$ = nterm primaryExp (: )
Stack now 0 2
Entering state 50
Now at end of input.
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 2
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 2
Entering state 47
Now at end of input.
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 2
Entering state 46
Now at end of input.
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 2
Entering state 45
Now at end of input.
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 2
Entering state 43
Reducing stack by rule 2 (line 56):
   $1 = token TK_START_EXPRESSION (: )
   $2 = nterm expr (: )
-> $$ = nterm prog (: )
Stack now 0
Entering state 3
Now at end of input.
Shifting token $end (: )
Entering state 55
Stack now 0 3 55
Cleanup: popping token $end (: )
Cleanup: popping nterm prog (: )
---yyparse ok
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 6 58
Entering state 50
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 6 58
Entering state 47
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 15 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 15
Entering state 31
Reducing stack by rule 8 (line 83):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 15
Entering state 70
Reducing stack by rule 3 (line 62):
   $1 = nterm stmtList (: )
   $2 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_ASSIGN (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 15
Entering state 30
Next token is token TK_ASSIGN (: )
Shifting token TK_ASSIGN (: )
Entering state 73
Reading a token: Next token is token TK_BRACE_OPEN (: )
Shifting token TK_BRACE_OPEN (: )
Entering state 41
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41
Entering state 50
Reading a token: Next token is token TK_HASH_IT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41
Entering state 47
Next token is token TK_HASH_IT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41
Entering state 46
Next token is token TK_HASH_IT (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41
Entering state 45
Next token is token TK_HASH_IT (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41
Entering state 77
Next token is token TK_HASH_IT (: )
Shifting token TK_HASH_IT (: )
Entering state 126
Reading a token: Next token is token TK_BRACKET_OPEN (: )
Shifting token TK_BRACKET_OPEN (: )
Entering state 42
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 77 126 42
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 77 126 42
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 77 126 42
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 77 126 42
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 77 126 42
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 77 126 42
Entering state 80
Reducing stack by rule 96 (line 590):
   $1 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 77 126 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 77 126 42 81 129
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 77 126 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 77 126 42 81 129
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 77 126 42 81 129
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 77 126 42 81 129
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 77 126 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 77 126 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 77 126 42 81 129
Entering state 50
Reading a token: Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 77 126 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 77 126 42 81 129
Entering state 47
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 77 126 42 81 129
Entering state 46
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 77 126 42 81 129
Entering state 45
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 77 126 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 77 126 42
Entering state 81
Next token is token TK_BRACKET_CLOSE (: )
Shifting token TK_BRACKET_CLOSE (: )
Entering state 130
Reducing stack by rule 94 (line 570):
   $1 = token TK_BRACKET_OPEN (: )
   $2 = nterm expressionList (: )
   $3 = token TK_BRACKET_CLOSE (: )
-> $$ = nterm listConstructor (: )
Stack now 0 1 15 30 73 41 77 126
Entering state 53
Reducing stack by rule 42 (line 317):
   $1 = nterm listConstructor (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 77 126
Entering state 146
Reducing stack by rule 102 (line 656):
   $1 = nterm expr (: )
   $2 = token TK_HASH_IT (: )
   $3 = nterm expr (: )
-> $$ = nterm hashClause (: )
Stack now 0 1 15 30 73 41
Entering state 79
Reducing stack by rule 100 (line 634):
   $1 = nterm hashClause (: )
-> $$ = nterm hashClauseList (: )
Stack now 0 1 15 30 73 41
Entering state 78
Reading a token: Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 127
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 50
Reading a token: Next token is token TK_HASH_IT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 47
Next token is token TK_HASH_IT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 46
Next token is token TK_HASH_IT (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 45
Next token is token TK_HASH_IT (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 77
Next token is token TK_HASH_IT (: )
Shifting token TK_HASH_IT (: )
Entering state 126
Reading a token: Next token is token TK_BRACKET_OPEN (: )
Shifting token TK_BRACKET_OPEN (: )
Entering state 42
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 80
Reducing stack by rule 96 (line 590):
   $1 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 50
Reading a token: Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 47
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 46
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 45
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 81
Next token is token TK_BRACKET_CLOSE (: )
Shifting token TK_BRACKET_CLOSE (: )
Entering state 130
Reducing stack by rule 94 (line 570):
   $1 = token TK_BRACKET_OPEN (: )
   $2 = nterm expressionList (: )
   $3 = token TK_BRACKET_CLOSE (: )
-> $$ = nterm listConstructor (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 53
Reducing stack by rule 42 (line 317):
   $1 = nterm listConstructor (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 146
Reducing stack by rule 102 (line 656):
   $1 = nterm expr (: )
   $2 = token TK_HASH_IT (: )
   $3 = nterm expr (: )
-> $$ = nterm hashClause (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 147
Reducing stack by rule 99 (line 623):
   $1 = nterm hashClauseList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm hashClause (: )
-> $$ = nterm hashClauseList (: )
Stack now 0 1 15 30 73 41
Entering state 78
Reading a token: Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 127
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 50
Reading a token: Next token is token TK_HASH_IT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 47
Next token is token TK_HASH_IT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 46
Next token is token TK_HASH_IT (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 45
Next token is token TK_HASH_IT (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 77
Next token is token TK_HASH_IT (: )
Shifting token TK_HASH_IT (: )
Entering state 126
Reading a token: Next token is token TK_BRACKET_OPEN (: )
Shifting token TK_BRACKET_OPEN (: )
Entering state 42
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 80
Reducing stack by rule 96 (line 590):
   $1 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 50
Reading a token: Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 47
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 46
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 45
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 81
Next token is token TK_BRACKET_CLOSE (: )
Shifting token TK_BRACKET_CLOSE (: )
Entering state 130
Reducing stack by rule 94 (line 570):
   $1 = token TK_BRACKET_OPEN (: )
   $2 = nterm expressionList (: )
   $3 = token TK_BRACKET_CLOSE (: )
-> $$ = nterm listConstructor (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 53
Reducing stack by rule 42 (line 317):
   $1 = nterm listConstructor (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 146
Reducing stack by rule 102 (line 656):
   $1 = nterm expr (: )
   $2 = token TK_HASH_IT (: )
   $3 = nterm expr (: )
-> $$ = nterm hashClause (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 147
Reducing stack by rule 99 (line 623):
   $1 = nterm hashClauseList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm hashClause (: )
-> $$ = nterm hashClauseList (: )
Stack now 0 1 15 30 73 41
Entering state 78
Reading a token: Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 127
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 50
Reading a token: Next token is token TK_HASH_IT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 47
Next token is token TK_HASH_IT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 46
Next token is token TK_HASH_IT (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 45
Next token is token TK_HASH_IT (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 77
Next token is token TK_HASH_IT (: )
Shifting token TK_HASH_IT (: )
Entering state 126
Reading a token: Next token is token TK_BRACKET_OPEN (: )
Shifting token TK_BRACKET_OPEN (: )
Entering state 42
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 80
Reducing stack by rule 96 (line 590):
   $1 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 50
Reading a token: Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 47
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 46
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 45
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 81
Next token is token TK_BRACKET_CLOSE (: )
Shifting token TK_BRACKET_CLOSE (: )
Entering state 130
Reducing stack by rule 94 (line 570):
   $1 = token TK_BRACKET_OPEN (: )
   $2 = nterm expressionList (: )
   $3 = token TK_BRACKET_CLOSE (: )
-> $$ = nterm listConstructor (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 53
Reducing stack by rule 42 (line 317):
   $1 = nterm listConstructor (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 146
Reducing stack by rule 102 (line 656):
   $1 = nterm expr (: )
   $2 = token TK_HASH_IT (: )
   $3 = nterm expr (: )
-> $$ = nterm hashClause (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 147
Reducing stack by rule 99 (line 623):
   $1 = nterm hashClauseList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm hashClause (: )
-> $$ = nterm hashClauseList (: )
Stack now 0 1 15 30 73 41
Entering state 78
Reading a token: Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 127
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 50
Reading a token: Next token is token TK_HASH_IT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 47
Next token is token TK_HASH_IT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 46
Next token is token TK_HASH_IT (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 45
Next token is token TK_HASH_IT (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 77
Next token is token TK_HASH_IT (: )
Shifting token TK_HASH_IT (: )
Entering state 126
Reading a token: Next token is token TK_BRACKET_OPEN (: )
Shifting token TK_BRACKET_OPEN (: )
Entering state 42
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 80
Reducing stack by rule 96 (line 590):
   $1 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 50
Reading a token: Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 47
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 46
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 45
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 30 73 41 78 127 77 126 42
Entering state 81
Next token is token TK_BRACKET_CLOSE (: )
Shifting token TK_BRACKET_CLOSE (: )
Entering state 130
Reducing stack by rule 94 (line 570):
   $1 = token TK_BRACKET_OPEN (: )
   $2 = nterm expressionList (: )
   $3 = token TK_BRACKET_CLOSE (: )
-> $$ = nterm listConstructor (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 53
Reducing stack by rule 42 (line 317):
   $1 = nterm listConstructor (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73 41 78 127 77 126
Entering state 146
Reducing stack by rule 102 (line 656):
   $1 = nterm expr (: )
   $2 = token TK_HASH_IT (: )
   $3 = nterm expr (: )
-> $$ = nterm hashClause (: )
Stack now 0 1 15 30 73 41 78 127
Entering state 147
Reducing stack by rule 99 (line 623):
   $1 = nterm hashClauseList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm hashClause (: )
-> $$ = nterm hashClauseList (: )
Stack now 0 1 15 30 73 41
Entering state 78
Reading a token: Next token is token TK_BRACE_CLOSE (: )
Shifting token TK_BRACE_CLOSE (: )
Entering state 128
Reducing stack by rule 98 (line 609):
   $1 = token TK_BRACE_OPEN (: )
   $2 = nterm hashClauseList (: )
   $3 = token TK_BRACE_CLOSE (: )
-> $$ = nterm hashConstructor (: )
Stack now 0 1 15 30 73
Entering state 54
Reducing stack by rule 41 (line 316):
   $1 = nterm hashConstructor (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 30 73
Entering state 122
Reducing stack by rule 21 (line 129):
   $1 = nterm varRef (: )
   $2 = token TK_ASSIGN (: )
   $3 = nterm expr (: )
-> $$ = nterm valueDeepCopyAssignStmt (: )
Stack now 0 1 15
Entering state 20
Reducing stack by rule 5 (line 80):
   $1 = nterm valueDeepCopyAssignStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 15
Entering state 70
Reducing stack by rule 3 (line 62):
   $1 = nterm stmtList (: )
   $2 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Now at end of input.
Reducing stack by rule 1 (line 51):
   $1 = token TK_START_STATEMENT (: )
   $2 = nterm stmtList (: )
-> $$ = nterm prog (: )
Stack now 0
Entering state 3
Now at end of input.
Shifting token $end (: )
Entering state 55
Stack now 0 3 55
Cleanup: popping token $end (: )
Cleanup: popping nterm prog (: )
---yyparse ok
---Eof Test---
ok
Testing test/02-if.p ... 
---Test: test/02-if.p (status: 0)---
---scanning file test/02-if.p
Starting parse
Entering state 0
Reading a token: Next token is token TK_START_STATEMENT (: )
Shifting token TK_START_STATEMENT (: )
Entering state 1
Reading a token: Next token is token TK_SUB (: )
Shifting token TK_SUB (: )
Entering state 5
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 57
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 107
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 74
Reducing stack by rule 34 (line 254):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm funcParamDecls (: )
Stack now 0 1 5 57 107
Entering state 134
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 149
Reducing stack by rule 31 (line 226):
   $1 = token TK_SUB (: )
   $2 = token TK_IDENTIFIER (: )
   $3 = token TK_PARENTHESES_OPEN (: )
   $4 = nterm funcParamDecls (: )
   $5 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionPrototypeDecl (: )
Stack now 0 1
Entering state 25
Reading a token: Next token is token TK_IF (: )
Shifting token TK_IF (: )
Entering state 12
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_OP_NUM_LT (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 25 12
Entering state 51
Reducing stack by rule 77 (line 421):
   $1 = nterm varRef (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 12
Entering state 50
Next token is token TK_OP_NUM_LT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 12
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 12
Entering state 47
Next token is token TK_OP_NUM_LT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 12
Entering state 46
Next token is token TK_OP_NUM_LT (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 12
Entering state 45
Next token is token TK_OP_NUM_LT (: )
Shifting token TK_OP_NUM_LT (: )
Entering state 84
Reducing stack by rule 49 (line 352):
   $1 = token TK_OP_NUM_LT (: )
-> $$ = nterm compExpOp (: )
Stack now 0 1 25 12 45
Entering state 94
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 12 45 94
Entering state 50
Reading a token: Next token is token TK_RETURN (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 12 45 94
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 12 45 94
Entering state 47
Next token is token TK_RETURN (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 12 45 94
Entering state 131
Next token is token TK_RETURN (: )
Reducing stack by rule 45 (line 340):
   $1 = nterm compExp (: )
   $2 = nterm compExpOp (: )
   $3 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 12
Entering state 45
Next token is token TK_RETURN (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 25 12
Entering state 67
Next token is token TK_RETURN (: )
Shifting token TK_RETURN (: )
Entering state 10
Reading a token: Next token is token TK_END (: )
Reducing stack by rule 38 (line 295):
   $1 = token TK_RETURN (: )
-> $$ = nterm returnStmt (: )
Stack now 0 1 25 12 67
Entering state 28
Reducing stack by rule 14 (line 89):
   $1 = nterm returnStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 25 12 67
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1 25 12 67
Entering state 117
Next token is token TK_END (: )
Reducing stack by rule 28 (line 192):
   $1 = nterm expr (: )
   $2 = nterm stmtList (: )
-> $$ = nterm condClause (: )
Stack now 0 1 25 12
Entering state 66
Reducing stack by rule 27 (line 187):
-> $$ = nterm elsifClause (: )
Stack now 0 1 25 12 66
Entering state 116
Next token is token TK_END (: )
Reducing stack by rule 25 (line 174):
   $1 = nterm elsifClause (: )
-> $$ = nterm elseClauses (: )
Stack now 0 1 25 12 66
Entering state 115
Next token is token TK_END (: )
Shifting token TK_END (: )
Entering state 140
Reducing stack by rule 23 (line 147):
   $1 = token TK_IF (: )
   $2 = nterm condClause (: )
   $3 = nterm elseClauses (: )
   $4 = token TK_END (: )
-> $$ = nterm ifStmt (: )
Stack now 0 1 25
Entering state 22
Reducing stack by rule 10 (line 85):
   $1 = nterm ifStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 25
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1 25
Entering state 71
Reading a token: Next token is token TK_IF (: )
Shifting token TK_IF (: )
Entering state 12
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_OP_NUM_EQ (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 25 71 12
Entering state 51
Reducing stack by rule 77 (line 421):
   $1 = nterm varRef (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 71 12
Entering state 50
Next token is token TK_OP_NUM_EQ (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 71 12
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 71 12
Entering state 47
Next token is token TK_OP_NUM_EQ (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 71 12
Entering state 46
Next token is token TK_OP_NUM_EQ (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 71 12
Entering state 45
Next token is token TK_OP_NUM_EQ (: )
Shifting token TK_OP_NUM_EQ (: )
Entering state 82
Reducing stack by rule 47 (line 350):
   $1 = token TK_OP_NUM_EQ (: )
-> $$ = nterm compExpOp (: )
Stack now 0 1 25 71 12 45
Entering state 94
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 71 12 45 94
Entering state 50
Reading a token: Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 71 12 45 94
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 71 12 45 94
Entering state 47
Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 71 12 45 94
Entering state 131
Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 45 (line 340):
   $1 = nterm compExp (: )
   $2 = nterm compExpOp (: )
   $3 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 71 12
Entering state 45
Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 25 71 12
Entering state 67
Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 71 12 67 6 58
Entering state 50
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 71 12 67 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 71 12 67 6 58
Entering state 47
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 71 12 67 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 71 12 67 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 25 71 12 67 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 25 71 12 67 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 25 71 12 67
Entering state 31
Reducing stack by rule 8 (line 83):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 25 71 12 67
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1 25 71 12 67
Entering state 117
Reading a token: Next token is token TK_ELSIF (: )
Reducing stack by rule 28 (line 192):
   $1 = nterm expr (: )
   $2 = nterm stmtList (: )
-> $$ = nterm condClause (: )
Stack now 0 1 25 71 12
Entering state 66
Reducing stack by rule 27 (line 187):
-> $$ = nterm elsifClause (: )
Stack now 0 1 25 71 12 66
Entering state 116
Next token is token TK_ELSIF (: )
Shifting token TK_ELSIF (: )
Entering state 141
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_OP_NUM_EQ (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 51
Reducing stack by rule 77 (line 421):
   $1 = nterm varRef (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 50
Next token is token TK_OP_NUM_EQ (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 47
Next token is token TK_OP_NUM_EQ (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 46
Next token is token TK_OP_NUM_EQ (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 45
Next token is token TK_OP_NUM_EQ (: )
Shifting token TK_OP_NUM_EQ (: )
Entering state 82
Reducing stack by rule 47 (line 350):
   $1 = token TK_OP_NUM_EQ (: )
-> $$ = nterm compExpOp (: )
Stack now 0 1 25 71 12 66 116 141 45
Entering state 94
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 71 12 66 116 141 45 94
Entering state 50
Reading a token: Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 71 12 66 116 141 45 94
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 71 12 66 116 141 45 94
Entering state 47
Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 71 12 66 116 141 45 94
Entering state 131
Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 45 (line 340):
   $1 = nterm compExp (: )
   $2 = nterm compExpOp (: )
   $3 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 45
Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 67
Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 50
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 47
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 25 71 12 66 116 141 67
Entering state 31
Reducing stack by rule 8 (line 83):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 25 71 12 66 116 141 67
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1 25 71 12 66 116 141 67
Entering state 117
Reading a token: Next token is token TK_ELSIF (: )
Reducing stack by rule 28 (line 192):
   $1 = nterm expr (: )
   $2 = nterm stmtList (: )
-> $$ = nterm condClause (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 151
Reducing stack by rule 26 (line 177):
   $1 = nterm elsifClause (: )
   $2 = token TK_ELSIF (: )
   $3 = nterm condClause (: )
-> $$ = nterm elsifClause (: )
Stack now 0 1 25 71 12 66
Entering state 116
Next token is token TK_ELSIF (: )
Shifting token TK_ELSIF (: )
Entering state 141
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_OP_NUM_EQ (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 51
Reducing stack by rule 77 (line 421):
   $1 = nterm varRef (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 50
Next token is token TK_OP_NUM_EQ (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 47
Next token is token TK_OP_NUM_EQ (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 46
Next token is token TK_OP_NUM_EQ (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 45
Next token is token TK_OP_NUM_EQ (: )
Shifting token TK_OP_NUM_EQ (: )
Entering state 82
Reducing stack by rule 47 (line 350):
   $1 = token TK_OP_NUM_EQ (: )
-> $$ = nterm compExpOp (: )
Stack now 0 1 25 71 12 66 116 141 45
Entering state 94
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 71 12 66 116 141 45 94
Entering state 50
Reading a token: Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 71 12 66 116 141 45 94
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 71 12 66 116 141 45 94
Entering state 47
Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 71 12 66 116 141 45 94
Entering state 131
Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 45 (line 340):
   $1 = nterm compExp (: )
   $2 = nterm compExpOp (: )
   $3 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 45
Next token is token TK_IDENTIFIER (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 67
Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 50
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 47
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 25 71 12 66 116 141 67 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 25 71 12 66 116 141 67
Entering state 31
Reducing stack by rule 8 (line 83):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 25 71 12 66 116 141 67
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1 25 71 12 66 116 141 67
Entering state 117
Reading a token: Next token is token TK_ELSE (: )
Reducing stack by rule 28 (line 192):
   $1 = nterm expr (: )
   $2 = nterm stmtList (: )
-> $$ = nterm condClause (: )
Stack now 0 1 25 71 12 66 116 141
Entering state 151
Reducing stack by rule 26 (line 177):
   $1 = nterm elsifClause (: )
   $2 = token TK_ELSIF (: )
   $3 = nterm condClause (: )
-> $$ = nterm elsifClause (: )
Stack now 0 1 25 71 12 66
Entering state 116
Next token is token TK_ELSE (: )
Shifting token TK_ELSE (: )
Entering state 142
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 71 12 66 116 142 6 58
Entering state 50
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 71 12 66 116 142 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 71 12 66 116 142 6 58
Entering state 47
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 71 12 66 116 142 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 71 12 66 116 142 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 25 71 12 66 116 142 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 25 71 12 66 116 142 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 25 71 12 66 116 142
Entering state 31
Reducing stack by rule 8 (line 83):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 25 71 12 66 116 142
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1 25 71 12 66 116 142
Entering state 152
Reading a token: Next token is token TK_END (: )
Reducing stack by rule 24 (line 161):
   $1 = nterm elsifClause (: )
   $2 = token TK_ELSE (: )
   $3 = nterm stmtList (: )
-> $$ = nterm elseClauses (: )
Stack now 0 1 25 71 12 66
Entering state 115
Next token is token TK_END (: )
Shifting token TK_END (: )
Entering state 140
Reducing stack by rule 23 (line 147):
   $1 = token TK_IF (: )
   $2 = nterm condClause (: )
   $3 = nterm elseClauses (: )
   $4 = token TK_END (: )
-> $$ = nterm ifStmt (: )
Stack now 0 1 25 71
Entering state 22
Reducing stack by rule 10 (line 85):
   $1 = nterm ifStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 25 71
Entering state 70
Reducing stack by rule 3 (line 62):
   $1 = nterm stmtList (: )
   $2 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1 25
Entering state 71
Reading a token: Next token is token TK_END (: )
Shifting token TK_END (: )
Entering state 120
Reducing stack by rule 30 (line 214):
   $1 = nterm functionPrototypeDecl (: )
   $2 = nterm stmtList (: )
   $3 = token TK_END (: )
-> $$ = nterm functionDefStmt (: )
Stack now 0 1
Entering state 24
Reducing stack by rule 9 (line 84):
   $1 = nterm functionDefStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 6 58
Entering state 50
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 6 58
Entering state 47
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 15 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 15
Entering state 31
Reducing stack by rule 8 (line 83):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 15
Entering state 70
Reducing stack by rule 3 (line 62):
   $1 = nterm stmtList (: )
   $2 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 6 58
Entering state 50
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 6 58
Entering state 47
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 15 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 15
Entering state 31
Reducing stack by rule 8 (line 83):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 15
Entering state 70
Reducing stack by rule 3 (line 62):
   $1 = nterm stmtList (: )
   $2 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 6 58
Entering state 50
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 6 58
Entering state 47
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 15 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 15
Entering state 31
Reducing stack by rule 8 (line 83):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 15
Entering state 70
Reducing stack by rule 3 (line 62):
   $1 = nterm stmtList (: )
   $2 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 6 58
Entering state 50
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 6 58
Entering state 47
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 15 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 15
Entering state 31
Reducing stack by rule 8 (line 83):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 15
Entering state 70
Reducing stack by rule 3 (line 62):
   $1 = nterm stmtList (: )
   $2 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Now at end of input.
Reducing stack by rule 1 (line 51):
   $1 = token TK_START_STATEMENT (: )
   $2 = nterm stmtList (: )
-> $$ = nterm prog (: )
Stack now 0
Entering state 3
Now at end of input.
Shifting token $end (: )
Entering state 55
Stack now 0 3 55
Cleanup: popping token $end (: )
Cleanup: popping nterm prog (: )
---yyparse ok
---Eof Test---
ok
Testing test/03-func-fact.p ... 
---Test: test/03-func-fact.p (status: 35584)---
---scanning file test/03-func-fact.p
Starting parse
Entering state 0
Reading a token: Next token is token TK_START_STATEMENT (: )
Shifting token TK_START_STATEMENT (: )
Entering state 1
Reading a token: Next token is token TK_SUB (: )
Shifting token TK_SUB (: )
Entering state 5
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 57
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 107
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 74
Reducing stack by rule 34 (line 254):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm funcParamDecls (: )
Stack now 0 1 5 57 107
Entering state 134
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 149
Reducing stack by rule 31 (line 226):
   $1 = token TK_SUB (: )
   $2 = token TK_IDENTIFIER (: )
   $3 = token TK_PARENTHESES_OPEN (: )
   $4 = nterm funcParamDecls (: )
   $5 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionPrototypeDecl (: )
Stack now 0 1
Entering state 25
Reading a token: Next token is token TK_IF (: )
Shifting token TK_IF (: )
Entering state 12
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_OP_NUM_GT (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 25 12
Entering state 51
Reducing stack by rule 77 (line 421):
   $1 = nterm varRef (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 12
Entering state 50
Next token is token TK_OP_NUM_GT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 12
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 12
Entering state 47
Next token is token TK_OP_NUM_GT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 12
Entering state 46
Next token is token TK_OP_NUM_GT (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 12
Entering state 45
Next token is token TK_OP_NUM_GT (: )
Shifting token TK_OP_NUM_GT (: )
Entering state 85
Reducing stack by rule 50 (line 353):
   $1 = token TK_OP_NUM_GT (: )
-> $$ = nterm compExpOp (: )
Stack now 0 1 25 12 45
Entering state 94
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 12 45 94
Entering state 50
Reading a token: Next token is token TK_RETURN (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 12 45 94
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 12 45 94
Entering state 47
Next token is token TK_RETURN (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 12 45 94
Entering state 131
Next token is token TK_RETURN (: )
Reducing stack by rule 45 (line 340):
   $1 = nterm compExp (: )
   $2 = nterm compExpOp (: )
   $3 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 12
Entering state 45
Next token is token TK_RETURN (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 25 12
Entering state 67
Next token is token TK_RETURN (: )
Shifting token TK_RETURN (: )
Entering state 10
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 12 67 10
Entering state 50
Reading a token: Next token is token TK_OP_NUM_MULT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 12 67 10
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 12 67 10
Entering state 47
Next token is token TK_OP_NUM_MULT (: )
Shifting token TK_OP_NUM_MULT (: )
Entering state 100
Reducing stack by rule 67 (line 390):
   $1 = token TK_OP_NUM_MULT (: )
-> $$ = nterm multExpOp (: )
Stack now 0 1 25 12 67 10 47
Entering state 102
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 25 12 67 10 47 102 6 58
Entering state 51
Reducing stack by rule 77 (line 421):
   $1 = nterm varRef (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 12 67 10 47 102 6 58
Entering state 50
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 12 67 10 47 102 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 12 67 10 47 102 6 58
Entering state 47
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 12 67 10 47 102 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 12 67 10 47 102 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 25 12 67 10 47 102 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 25 12 67 10 47 102 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 25 12 67 10 47 102
Entering state 52
Reducing stack by rule 83 (line 463):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 12 67 10 47 102
Entering state 50
Reading a token: Next token is token TK_ELSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 12 67 10 47 102
Entering state 133
Reducing stack by rule 64 (line 379):
   $1 = nterm multExp (: )
   $2 = nterm multExpOp (: )
   $3 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 12 67 10
Entering state 47
Next token is token TK_ELSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 12 67 10
Entering state 46
Next token is token TK_ELSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 12 67 10
Entering state 45
Next token is token TK_ELSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 25 12 67 10
Entering state 64
Reducing stack by rule 37 (line 288):
   $1 = token TK_RETURN (: )
   $2 = nterm expr (: )
-> $$ = nterm returnStmt (: )
Stack now 0 1 25 12 67
Entering state 28
Reducing stack by rule 14 (line 89):
   $1 = nterm returnStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 25 12 67
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1 25 12 67
Entering state 117
Next token is token TK_ELSE (: )
Reducing stack by rule 28 (line 192):
   $1 = nterm expr (: )
   $2 = nterm stmtList (: )
-> $$ = nterm condClause (: )
Stack now 0 1 25 12
Entering state 66
Reducing stack by rule 27 (line 187):
-> $$ = nterm elsifClause (: )
Stack now 0 1 25 12 66
Entering state 116
Next token is token TK_ELSE (: )
Shifting token TK_ELSE (: )
Entering state 142
Reading a token: Next token is token TK_RETURN (: )
Shifting token TK_RETURN (: )
Entering state 10
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 25 12 66 116 142 10
Entering state 50
Reading a token: Next token is token TK_END (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 25 12 66 116 142 10
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 25 12 66 116 142 10
Entering state 47
Next token is token TK_END (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 25 12 66 116 142 10
Entering state 46
Next token is token TK_END (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 25 12 66 116 142 10
Entering state 45
Next token is token TK_END (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 25 12 66 116 142 10
Entering state 64
Reducing stack by rule 37 (line 288):
   $1 = token TK_RETURN (: )
   $2 = nterm expr (: )
-> $$ = nterm returnStmt (: )
Stack now 0 1 25 12 66 116 142
Entering state 28
Reducing stack by rule 14 (line 89):
   $1 = nterm returnStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 25 12 66 116 142
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1 25 12 66 116 142
Entering state 152
Next token is token TK_END (: )
Reducing stack by rule 24 (line 161):
   $1 = nterm elsifClause (: )
   $2 = token TK_ELSE (: )
   $3 = nterm stmtList (: )
-> $$ = nterm elseClauses (: )
Stack now 0 1 25 12 66
Entering state 115
Next token is token TK_END (: )
Shifting token TK_END (: )
Entering state 140
Reducing stack by rule 23 (line 147):
   $1 = token TK_IF (: )
   $2 = nterm condClause (: )
   $3 = nterm elseClauses (: )
   $4 = token TK_END (: )
-> $$ = nterm ifStmt (: )
Stack now 0 1 25
Entering state 22
Reducing stack by rule 10 (line 85):
   $1 = nterm ifStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 25
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1 25
Entering state 71
Reading a token: Next token is token TK_END (: )
Shifting token TK_END (: )
Entering state 120
Reducing stack by rule 30 (line 214):
   $1 = nterm functionPrototypeDecl (: )
   $2 = nterm stmtList (: )
   $3 = token TK_END (: )
-> $$ = nterm functionDefStmt (: )
Stack now 0 1
Entering state 24
Reducing stack by rule 9 (line 84):
   $1 = nterm functionDefStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Next token is token TK_FOR (: )
Shifting token TK_FOR (: )
Entering state 13
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 68
Reading a token: Next token is token TK_BRACKET_OPEN (: )
Shifting token TK_BRACKET_OPEN (: )
Entering state 42
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 13 68 42
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 13 68 42
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 13 68 42
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 13 68 42
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 13 68 42
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 13 68 42
Entering state 80
Reducing stack by rule 96 (line 590):
   $1 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 13 68 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 13 68 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 50
Reading a token: Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 47
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 46
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 45
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 13 68 42
Entering state 81
Next token is token TK_BRACKET_CLOSE (: )
Shifting token TK_BRACKET_CLOSE (: )
Entering state 130
Reducing stack by rule 94 (line 570):
   $1 = token TK_BRACKET_OPEN (: )
   $2 = nterm expressionList (: )
   $3 = token TK_BRACKET_CLOSE (: )
-> $$ = nterm listConstructor (: )
Stack now 0 1 15 13 68
Entering state 53
Reducing stack by rule 42 (line 317):
   $1 = nterm listConstructor (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 13 68
Entering state 118
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 13 68 118 6 58
Entering state 50
Reading a token: Next token is token TK_OP_STR_CAT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 13 68 118 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 13 68 118 6 58
Entering state 47
Next token is token TK_OP_STR_CAT (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 13 68 118 6 58
Entering state 46
Next token is token TK_OP_STR_CAT (: )
Shifting token TK_OP_STR_CAT (: )
Entering state 95
Reducing stack by rule 62 (line 375):
   $1 = token TK_OP_STR_CAT (: )
-> $$ = nterm addExpOp (: )
Stack now 0 1 15 13 68 118 6 58 46
Entering state 98
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_OP_STR_CAT (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 51
Reducing stack by rule 77 (line 421):
   $1 = nterm varRef (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 50
Next token is token TK_OP_STR_CAT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 132
Next token is token TK_OP_STR_CAT (: )
Reducing stack by rule 59 (line 364):
   $1 = nterm addExp (: )
   $2 = nterm addExpOp (: )
   $3 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 13 68 118 6 58
Entering state 46
Next token is token TK_OP_STR_CAT (: )
Shifting token TK_OP_STR_CAT (: )
Entering state 95
Reducing stack by rule 62 (line 375):
   $1 = token TK_OP_STR_CAT (: )
-> $$ = nterm addExpOp (: )
Stack now 0 1 15 13 68 118 6 58 46
Entering state 98
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 50
Reading a token: Next token is token TK_OP_STR_CAT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 132
Next token is token TK_OP_STR_CAT (: )
Reducing stack by rule 59 (line 364):
   $1 = nterm addExp (: )
   $2 = nterm addExpOp (: )
   $3 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 13 68 118 6 58
Entering state 46
Next token is token TK_OP_STR_CAT (: )
Shifting token TK_OP_STR_CAT (: )
Entering state 95
Reducing stack by rule 62 (line 375):
   $1 = token TK_OP_STR_CAT (: )
-> $$ = nterm addExpOp (: )
Stack now 0 1 15 13 68 118 6 58 46
Entering state 98
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_OPEN (: )
Shifting token TK_PARENTHESES_OPEN (: )
Entering state 58
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 85 (line 474):
   $1 = token TK_IDENTIFIER (: )
-> $$ = nterm varRef (: )
Stack now 0 1 15 13 68 118 6 58 46 98 6 58
Entering state 51
Reducing stack by rule 77 (line 421):
   $1 = nterm varRef (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98 6 58
Entering state 50
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98 6 58
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98 6 58
Entering state 47
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 13 68 118 6 58 46 98 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 15 13 68 118 6 58 46 98 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 52
Reducing stack by rule 83 (line 463):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 50
Reading a token: Next token is token TK_OP_STR_CAT (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 132
Next token is token TK_OP_STR_CAT (: )
Reducing stack by rule 59 (line 364):
   $1 = nterm addExp (: )
   $2 = nterm addExpOp (: )
   $3 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 13 68 118 6 58
Entering state 46
Next token is token TK_OP_STR_CAT (: )
Shifting token TK_OP_STR_CAT (: )
Entering state 95
Reducing stack by rule 62 (line 375):
   $1 = token TK_OP_STR_CAT (: )
-> $$ = nterm addExpOp (: )
Stack now 0 1 15 13 68 118 6 58 46
Entering state 98
Reading a token: Next token is token TK_MULTI_PART_STRING_CONSTANT (: )
Shifting token TK_MULTI_PART_STRING_CONSTANT (: )
Entering state 34
Reducing stack by rule 80 (line 439):
   $1 = token TK_MULTI_PART_STRING_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 50
Reading a token: Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 13 68 118 6 58 46 98
Entering state 132
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 59 (line 364):
   $1 = nterm addExp (: )
   $2 = nterm addExpOp (: )
   $3 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 13 68 118 6 58
Entering state 46
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 13 68 118 6 58
Entering state 45
Next token is token TK_PARENTHESES_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 13 68 118 6 58
Entering state 109
Reducing stack by rule 92 (line 550):
   $1 = nterm expr (: )
-> $$ = nterm functionArgList (: )
Stack now 0 1 15 13 68 118 6 58
Entering state 110
Next token is token TK_PARENTHESES_CLOSE (: )
Shifting token TK_PARENTHESES_CLOSE (: )
Entering state 136
Reducing stack by rule 90 (line 525):
   $1 = token TK_IDENTIFIER (: )
   $2 = token TK_PARENTHESES_OPEN (: )
   $3 = nterm functionArgList (: )
   $4 = token TK_PARENTHESES_CLOSE (: )
-> $$ = nterm functionCallStmt (: )
Stack now 0 1 15 13 68 118
Entering state 31
Reducing stack by rule 8 (line 83):
   $1 = nterm functionCallStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 15 13 68 118
Entering state 16
Reducing stack by rule 4 (line 70):
   $1 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1 15 13 68 118
Entering state 143
Reading a token: Next token is token TK_END (: )
Shifting token TK_END (: )
Entering state 153
Reducing stack by rule 18 (line 96):
   $1 = token TK_FOR (: )
   $2 = token TK_IDENTIFIER (: )
   $3 = nterm expr (: )
   $4 = nterm stmtList (: )
   $5 = token TK_END (: )
-> $$ = nterm forStmt (: )
Stack now 0 1 15
Entering state 17
Reducing stack by rule 11 (line 86):
   $1 = nterm forStmt (: )
-> $$ = nterm stmt (: )
Stack now 0 1 15
Entering state 70
Reducing stack by rule 3 (line 62):
   $1 = nterm stmtList (: )
   $2 = nterm stmt (: )
-> $$ = nterm stmtList (: )
Stack now 0 1
Entering state 15
Reading a token: Next token is token TK_FOR (: )
Shifting token TK_FOR (: )
Entering state 13
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 68
Reading a token: Next token is token TK_BRACKET_OPEN (: )
Shifting token TK_BRACKET_OPEN (: )
Entering state 42
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 13 68 42
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 13 68 42
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 13 68 42
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 13 68 42
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 13 68 42
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 13 68 42
Entering state 80
Reducing stack by rule 96 (line 590):
   $1 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 13 68 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 50
Reading a token: Next token is token TK_COMMA (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 47
Next token is token TK_COMMA (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 46
Next token is token TK_COMMA (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 45
Next token is token TK_COMMA (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 13 68 42
Entering state 81
Next token is token TK_COMMA (: )
Shifting token TK_COMMA (: )
Entering state 129
Reading a token: Next token is token TK_INTEGER_CONSTANT (: )
Shifting token TK_INTEGER_CONSTANT (: )
Entering state 36
Reducing stack by rule 78 (line 422):
   $1 = token TK_INTEGER_CONSTANT (: )
-> $$ = nterm primaryExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 50
Reading a token: Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 71 (line 409):
   $1 = nterm primaryExp (: )
-> $$ = nterm unaryExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 48
Reducing stack by rule 65 (line 386):
   $1 = nterm unaryExp (: )
-> $$ = nterm multExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 47
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 60 (line 371):
   $1 = nterm multExp (: )
-> $$ = nterm addExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 46
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 46 (line 347):
   $1 = nterm addExp (: )
-> $$ = nterm compExp (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 45
Next token is token TK_BRACKET_CLOSE (: )
Reducing stack by rule 40 (line 315):
   $1 = nterm compExp (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 13 68 42 81 129
Entering state 148
Reducing stack by rule 95 (line 581):
   $1 = nterm expressionList (: )
   $2 = token TK_COMMA (: )
   $3 = nterm expr (: )
-> $$ = nterm expressionList (: )
Stack now 0 1 15 13 68 42
Entering state 81
Next token is token TK_BRACKET_CLOSE (: )
Shifting token TK_BRACKET_CLOSE (: )
Entering state 130
Reducing stack by rule 94 (line 570):
   $1 = token TK_BRACKET_OPEN (: )
   $2 = nterm expressionList (: )
   $3 = token TK_BRACKET_CLOSE (: )
-> $$ = nterm listConstructor (: )
Stack now 0 1 15 13 68
Entering state 53
Reducing stack by rule 42 (line 317):
   $1 = nterm listConstructor (: )
-> $$ = nterm expr (: )
Stack now 0 1 15 13 68
Entering state 118
Reading a token: Next token is token TK_IDENTIFIER (: )
Shifting token TK_IDENTIFIER (: )
Entering state 6
Reading a token: Segmentation fault (core dumped)
---Eof Test---
Failed !
	actual exit status 35584 expected to be zero
