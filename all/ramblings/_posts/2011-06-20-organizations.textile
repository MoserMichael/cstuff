---
layout: post
title: Scrum and what makes organizations tick
---

h2. {{ page.title }}
<p class="publish_date">20 July 2011</p>

Organizations all have to solve a common problem; they somehow have to motivate their workers to do their best and to toe the line. Especially big organization have to cope with the forces of "alienation / enstrangement":http://en.wikipedia.org/wiki/Marx%27s_theory_of_alienation of an abstract workforce; everybody is doing his very tiny part of the whole, and certainly most people do not have a global picture of what is happening / do not care about it at all.  There are all sorts of "psychological models":http://www.monroecc.edu/wusers/mmarriott/bus204/ch13.htm  of how to motivate a 'workforce' ;  mostly it tries to identify peoples 'needs' versus 'expectations' whatever / in a way it's like most psychology - about how to press the right button / stimulus - response that is. 
I think that there can be the following basic approaches:

*  The big carrot trick; Once upon a time, with fast growing companies you had the incentive of vesting stock options; now that is somehow less tangible, except for a few companies that are also very picky with their hiring process ;-) 

* Building of "pecking orders_":http://en.wikipedia.org/wiki/Pecking_order - hierarchy building. Every member of the organization is supposed to value his position in the order of things and strive to get to a higher rung. Also there is the very personal  question of 'where will I be once I leave the current pecking order' that is  supposed to 
be a factor of employee retention. However the end result of this effort often stinks.

* Another lever is the degree of autonomy that a lower level manager gets. However I do think that a high degree of autonomy breeds serfdom at the workplace, power seldom brings out the best in man, especially not among control oriented geeks.

* Exploration into "Non hierarchical methods":http://www.esrad.org.uk/resources/vsmg_3/screen.php?page=introduction  of building and organization.  For example the Viable Systems model tries to "view an organization as a system model":http://www.esrad.org.uk/resources/vsmg_3/screen.php?page=1qguide  that stresses the importance of such concepts as Information flow / feedback between the different parts of an organization.  Optimization of information flow is regarded as a major task, which also requires total transparency and also everybody needs to have a say in things - participation that is.

Very interesting approach, unfortunately "Professor Stafford Beer":http://en.wikipedia.org/wiki/Anthony_Stafford_Beer , the author of this approach was an "management consultant / adviser for the Chilean government of Salvador Allende":http://en.wikipedia.org/wiki/Project_Cybersyn which sort of labeled him in terms of ideology. I think it's a pity, because the cybernetic approach of studying organizations is not a question of who owns what, it's a question of how to run a business.

Fast forward to the WEB 2.0 world where we now have the "Scrum methodology of (software) development":http://en.wikipedia.org/wiki/Scrum_%28development%29  
The aim of Scrum takes is to build "Self Organizing teams":http://stackoverflow.com/questions/4231226/what-does-self-organizing-scrum-team-mean - that is nobody can tell the team the details of how to create the product (sort of the Manager is not supposed to interfere with the technical details). Also a large part of the process is about information flow and how to incorporate early feedback into the (software) product.

(Personally I dislike Scrum stand up meetings, as they are always held early in the day - the time of day where I tend to do things productively) However the concept is certainly an interesting one ... Another problem is that Scrum started out as a simple methodology, but then started to be ever more complex; (this is the way of things with Software). So with a sophisticated process you sometimes lose touch even with stated 'overriding principles' that is ... And that's probably the way with all Ideologies, in a larger sense.

Another point is that SCRUM when compared with the "Viable System Model":http://www.esrad.org.uk/resources/vsmg_3/screen.php?page=introduction has much less rigor. SCRUM, unlike the "Viable System Model", is not a discipline of analyzing systems or processes; it is more of a set of procedures that promise to set up an environment in order to enable people to 'get things done' (sounds very amorphous- they like that with software).

Also interesting to note is that the "Scrum methodology of (software) development":http://en.wikipedia.org/wiki/Scrum_%28development%29 people don't know anything about this "Viable System Model":http://www.esrad.org.uk/resources/vsmg_3/screen.php?page=introduction  , though both approaches do share a lot of ideas ... 

 (Current Music:  "Crossby, Stills and Nash: You don't have to cry":http://www.youtube.com/watch?v=1awtlA6Nr64  )


<notextile>
<iframe width="425" height="349" src="http://www.youtube.com/watch?v=1awtlA6Nr64" frameborder="0" allowfullscreen></iframe>
</notextile>



